 (C) COPYRIGHT International Business Machines Corp. 1995, 1996
 All Rights Reserved
 Licensed Materials - Property of IBM
 US Government Users Restricted Rights - Use, duplication or
 disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
  
 DISCLAIMER OF WARRANTIES.
 The following [enclosed] code is sample code created by IBM
 Corporation. This sample code is not part of any standard or IBM
 product and is provided to you solely for the purpose of assisting
 you in the development of your applications.  The code is provided
 "AS IS". IBM MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
 NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 FOR A PARTICULAR PURPOSE, REGARDING THE FUNCTION OR PERFORMANCE OF
 THIS CODE.  IBM shall not be liable for any damages arising out of
 your use of the sample code, even if they have been advised of the
 possibility of such damages.
  
 DISTRIBUTION.
 This sample code can be freely distributed, copied, altered, and
 incorporated into other software, provided that it bears the above
 Copyright notice and DISCLAIMER intact.

  

  NOTE:
  If you are looking at the files on an RS/6000 running AIX, and if the files 
  names are in uppercase, then you can use the included script file (aixfiles) 
  to change the filenames so that the makefile will work. The file names may be 
  in uppercase depending on how the files were transferred to the workstation.
	



  The sample code is for the Point of Sale example written for the CORBA
  Fundamentals and Programming book. 

  Makefiles are provided for AIX and OS/2. The sample has been tested on
  on CSD212 of the SOMobjects Toolkit. For the current version of the sample
  and other current product information consult the Web page 
        http://www.austin.ibm.com/developer/objects/som1.html

  By the time the book appears, it is likely the next version of the 
  SOMobjects toolkit will be released. The Web home page will have 
  additional information.

  The interfaces are described in the .idl files. There are 4 IDL files
	
  central.idl  : This file describes the Depot interface in the CentralOffice
	        module

  pnamesvc.idl : This file has the definition of the PseudoNameService interface
  
  pos.idl      : This file describes the POS module. There are 3 interfaces 
                 defined in this module: InputMedia, OutputMedia and POSTerminal
  
  store.idl    : This file describes the Store, Tax, and StoreAccess interfaces

  The corresponding .c files provide the implementations for the interface 
  definitions. db.h and db.c files are used in the implementation of the 
  simplified "database" used by the name service. util.c has some utility 
  functions. common.h has definitions for some constants and prototypes.
  The initmod.c file has initialization and termination routines for DLLs.
  The SOMInitModule function creates all class objects in the DLL. 


  How to run the sample?

  First you need to have installed the SOMobjects toolkit on the machine
  you are trying to run the sample on. The SOM-specific environment variables
  need to be set. Specifically, SOMIR, SOMBASE and SOMDDIR have to be set.
  Make sure SMADDSTAR is unset; the samples cannot be compiled if it is
  set. Also, make sure that the som.ir file in the present directory is in the
  SOMIR path. Using the appropriate makefile make the executables and libraries.
  The makefile will also register the servers in the implementation repository.
  Two script files aixrun and os2run.cmd are provided that will instantiate the
  servers. Then, run the posClnt program. Specify the posid and storeid. This
  example has only one store server storesvr_1 registered and 2 output media
  servers outputsvr_1 and outputsvr_2 registered in the implementation
  repository (see the regimpl commands in the makefiles). Valid posid values
  are 1 and 2, and valid storeid value is 1. These can be extended by 
  registering additional servers (using the same syntax as in the makefile).
  
  posClnt Input:
	First you will have to login to the POSTerminal, so type l or L.
  Then type the barcode (look in depot.dat for valid barcode values). 
  "Keypad" input is provided by typing q followed by a number. This specifies
  the quantity of the item whose barcode then follows on the next input.
  The outputs are generated in the window for the OutputMedia object, the
  Tax object, etc. 
