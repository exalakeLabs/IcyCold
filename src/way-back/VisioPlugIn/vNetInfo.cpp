//*****************************************************************************
//	VNETINFO.CPP - Generated by the "MFC VAddon VSL Wizard."
//	Copyright (C) 1997 Visio Corporation. All rights reserved.

#include "stdafx.h"

#include "vNetInfo.h"		//	Your wizard-generated subclass of VAddon
#include "DlgAbout.h"
#include "NetworkResourceCollector.h"

// The one and only NetInfo addon.
VNetInfo g_vNetInfoAddon(_T("&Network Resources"));

VNetInfo::VNetInfo(LPCTSTR pName) : 
VNetInfo_PARENT(ATTS, VAO_ENABLEALWAYS, 0, 0, pName)
{
}

VNetInfo::~VNetInfo()
{
}

VAORC VNetInfo::Run(LPVAOV2LSTRUCT pV2L)
{
	CNetworkResourceCollector nrCollector(this);
	BOOL rc = FALSE;

	rc = nrCollector.Run();

	ASSERT(rc);

	if(!(rc))
	{
		AfxMessageBox(IDE_GENERAL_RESOURCE_COLLECTION, MB_OK | MB_ICONSTOP);
	}

	return(VAORC_SUCCESS);
}

VAORC VNetInfo::IsEnabled(LPVAOV2LSTRUCT pV2L)
{
	return VNetInfo_PARENT::IsEnabled(pV2L);
}

VAORC VNetInfo::About(LPVAOV2LSTRUCT pV2L)
{
	CDlgAbout dlg;

	dlg.DoModal();

	return VAORC_SUCCESS;
}

VAORC VNetInfo::Load(WORD wVersion, LPVOID p)
{
	return VNetInfo_PARENT::Load(wVersion, p);
}

VAORC VNetInfo::Unload(WORD wParam, LPVOID p)
{
	m_app= NULL;
	return VNetInfo_PARENT::Unload(wParam, p);
}

VAORC VNetInfo::KillSession(LPVAOV2LSTRUCT pV2L)
{
	return VNetInfo_PARENT::KillSession(pV2L);
}

HINSTANCE VNetInfo::GetInstance(long nFlags /*= 0L*/)
{
	return VNetInfo_PARENT::GetInstance(nFlags);
}

HRESULT VNetInfo::GetApp(CVisioApplication &app)
{
	if(m_app.IsSet() || (VAO_SUCCESS == vaoGetObjectWrap(m_app)))
	{
		app = m_app;

		return(NOERROR);
	}

	return(E_FAIL);
}

