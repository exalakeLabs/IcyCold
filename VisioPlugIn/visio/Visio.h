/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: Visio */

#ifndef _Visio_H_
#define _Visio_H_

DEFINE_GUID(LIBID_Visio,0x00021A98L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);
#ifndef BEGIN_INTERFACE
#define BEGIN_INTERFACE
#endif

interface IVApplication;

interface IVCell;

interface IVCharacters;

interface IVConnect;

interface IVConnects;

interface IVDocument;

interface IVDocuments;

interface IVMaster;

interface IVMasters;

interface IVPage;

interface IVPages;

interface IVSelection;

interface IVShape;

interface IVShapes;

interface IVStyle;

interface IVStyles;

interface IVWindow;

interface IVWindows;

interface IVLayer;

interface IVLayers;

interface IVFont;

interface IVFonts;

interface IVColor;

interface IVColors;

interface IVAddon;

interface IVAddons;

interface IVEvent;

interface IVEventList;

interface IVMenuItem;

interface IVMenuItems;

interface IVMenu;

interface IVMenus;

interface IVMenuSet;

interface IVMenuSets;

interface IVToolbarItem;

interface IVToolbarItems;

interface IVToolbar;

interface IVToolbars;

interface IVToolbarSet;

interface IVToolbarSets;

interface IVStatusBarItem;

interface IVStatusBarItems;

interface IVStatusBar;

interface IVStatusBars;

interface IVAccelItem;

interface IVAccelItems;

interface IVAccelTable;

interface IVAccelTables;

interface IVUIObject;

interface IEnumVMenuItem;

interface IEnumVMenu;

interface IEnumVMenuSet;

interface IEnumVToolbarItem;

interface IEnumVToolbar;

interface IEnumVToolbarSet;

interface IEnumVStatusBarItem;

interface IEnumVStatusBar;

interface IEnumVAccelItem;

interface IEnumVAccelTable;

interface IVHyperlink;

interface IVOLEObjects;

interface IVOLEObject;

interface IVPaths;

interface IVPath;

interface IVCurve;

typedef IVApplication FAR* LPVISIOAPPLICATION;

typedef IVCell FAR* LPVISIOCELL;

typedef IVCharacters FAR* LPVISIOCHARS;

typedef IVConnect FAR* LPVISIOCONNECT;

typedef IVConnects FAR* LPVISIOCONNECTS;

typedef IVDocument FAR* LPVISIODOCUMENT;

typedef IVDocuments FAR* LPVISIODOCUMENTS;

typedef IVMaster FAR* LPVISIOMASTER;

typedef IVMasters FAR* LPVISIOMASTERS;

typedef IVPage FAR* LPVISIOPAGE;

typedef IVPages FAR* LPVISIOPAGES;

typedef IVSelection FAR* LPVISIOSELECTION;

typedef IVShape FAR* LPVISIOSHAPE;

typedef IVShapes FAR* LPVISIOSHAPES;

typedef IVStyle FAR* LPVISIOSTYLE;

typedef IVStyles FAR* LPVISIOSTYLES;

typedef IVWindow FAR* LPVISIOWINDOW;

typedef IVWindows FAR* LPVISIOWINDOWS;

typedef IVLayer FAR* LPVISIOLAYER;

typedef IVLayers FAR* LPVISIOLAYERS;

typedef IVFont FAR* LPVISIOFONT;

typedef IVFonts FAR* LPVISIOFONTS;

typedef IVColor FAR* LPVISIOCOLOR;

typedef IVColors FAR* LPVISIOCOLORS;

typedef IVAddon FAR* LPVISIOADDON;

typedef IVAddons FAR* LPVISIOADDONS;

typedef IVEvent FAR* LPVISIOEVENT;

typedef IVEventList FAR* LPVISIOEVENTS;

typedef IVMenuItem FAR* LPVISIOMENUITEM;

typedef IVMenuItems FAR* LPVISIOMENUITEMS;

typedef IVMenu FAR* LPVISIOMENU;

typedef IVMenus FAR* LPVISIOMENUS;

typedef IVMenuSet FAR* LPVISIOMENUSET;

typedef IVMenuSets FAR* LPVISIOMENUSETS;

typedef IVToolbarItem FAR* LPVISIOTOOLBARITEM;

typedef IVToolbarItems FAR* LPVISIOTOOLBARITEMS;

typedef IVToolbar FAR* LPVISIOTOOLBAR;

typedef IVToolbars FAR* LPVISIOTOOLBARS;

typedef IVToolbarSet FAR* LPVISIOTOOLBARSET;

typedef IVToolbarSets FAR* LPVISIOTOOLBARSETS;

typedef IVStatusBarItem FAR* LPVISIOSTATUSBARITEM;

typedef IVStatusBarItems FAR* LPVISIOSTATUSBARITEMS;

typedef IVStatusBar FAR* LPVISIOSTATUSBAR;

typedef IVStatusBars FAR* LPVISIOSTATUSBARS;

typedef IVAccelItem FAR* LPVISIOACCELITEM;

typedef IVAccelItems FAR* LPVISIOACCELITEMS;

typedef IVAccelTable FAR* LPVISIOACCELTABLE;

typedef IVAccelTables FAR* LPVISIOACCELTABLES;

typedef IVUIObject FAR* LPVISIOUIOBJECT;

typedef IEnumVMenuItem FAR* LPVISIOENUMVMENUITEM;

typedef IEnumVMenu FAR* LPVISIOENUMVMENU;

typedef IEnumVMenuSet FAR* LPVISIOENUMVMENUSET;

typedef IEnumVToolbarItem FAR* LPVISIOENUMVTOOLBARITEM;

typedef IEnumVToolbar FAR* LPVISIOENUMVTOOLBAR;

typedef IEnumVToolbarSet FAR* LPVISIOENUMVTOOLBARSET;

typedef IEnumVStatusBarItem FAR* LPVISIOENUMVSTATUSBARITEM;

typedef IEnumVStatusBar FAR* LPVISIOENUMVSTATUSBAR;

typedef IEnumVAccelItem FAR* LPVISIOENUMVACCELITEM;

typedef IEnumVAccelTable FAR* LPVISIOENUMVACCELTABLE;

typedef enum tagVisUnitCodes {
    visNumber = 32,
    visDate = 40,
    visDurationUnits = 42,
    visElapsedWeek = 43,
    visElapsedDay = 44,
    visElapsedHour = 45,
    visElapsedMin = 46,
    visElapsedSec = 47,
    visTypeUnits = 48,
    visPoints = 50,
    visPicas = 51,
    visDidots = 53,
    visCiceros = 54,
    visPageUnits = 63,
    visDrawingUnits = 64,
    visInches = 65,
    visFeet = 66,
    visFeetAndInches = 67,
    visMiles = 68,
    visCentimeters = 69,
    visMillimeters = 70,
    visMeters = 71,
    visKilometers = 72,
    visInchFrac = 73,
    visMileFrac = 74,
    visYards = 75,
    visNautMiles = 76,
    visAngleUnits = 80,
    visDegrees = 81,
    visDegreeMinSec = 82,
    visRadians = 83,
    visMin = 84,
    visSec = 85,
    visCurrency = 111,
    visNoCast = 252
} VisUnitCodes;

typedef enum tagVisWinTypes {
    visWinOther = 0,
    visDrawing = 1,
    visStencil = 2,
    visSheet = 3,
    visIcon = 4,
    visPageWin = 128,
    visPageGroupWin = 160,
    visMasterWin = 64,
    visMasterGroupWin = 96
} VisWinTypes;

typedef enum tagVisShapeTypes {
    visTypePage = 1,
    visTypeGroup = 2,
    visTypeShape = 3,
    visTypeForeignObject = 4,
    visTypeGuide = 5,
    visTypeMetafile = 16,
    visTypeBitmap = 32,
    visTypeIsLinked = 256,
    visTypeIsEmbedded = 512,
    visTypeIsControl = 1024,
    visTypeIsOLE2 = 32768
} VisShapeTypes;

typedef enum tagVisShapeIDs {
    visInvalShapeID = -1,
    visPageSheetID = 0
} VisShapeIDs;

typedef enum tagVisSectionIndices {
    visSectionInval = 255,
    visSectionFirst = 0,
    visSectionLast = 252,
    visSectionNone = 255,
    visSectionObject = 1,
    visSectionMember = 2,
    visSectionCharacter = 3,
    visSectionParagraph = 4,
    visSectionTab = 5,
    visSectionScratch = 6,
    visSectionExport = 7,
    visSectionConnectionPts = 7,
    visSectionTextField = 8,
    visSectionControls = 9,
    visSectionFirstComponent = 10,
    visSectionLastComponent = 239,
    visSectionAction = 240,
    visSectionLayer = 241,
    visSectionUser = 242,
    visSectionProp = 243,
    visSectionLastReal = 243
} VisSectionIndices;

typedef enum tagVisRowIndices {
    visRowFirst = 0,
    visRowLast = -2,
    visRowNone = -1,
    visRowXFormOut = 1,
    visRowXFormIn = 1,
    visRowLine = 2,
    visRowFill = 3,
    visRowXForm1D = 4,
    visRowEvent = 5,
    visRowLayerMem = 6,
    visRowGuide = 7,
    visRowStyle = 8,
    visRowForeign = 9,
    visRowPage = 10,
    visRowText = 11,
    visRowTextXForm = 12,
    visRowAlign = 14,
    visRowLock = 15,
    visRowData123 = 16,
    visRowMisc = 17,
    visRowRulerGrid = 18,
    visRowHyperlink = 19,
    visRowComponent = 0,
    visRowVertex = 1,
    visRowMember = 0,
    visRowCharacter = 0,
    visRowParagraph = 0,
    visRowTab = 0,
    visRowScratch = 0,
    visRowExport = 0,
    visRowConnectionPts = 0,
    visRowField = 0,
    visRowControl = 0,
    visRowAction = 0,
    visRowLayer = 0,
    visRowUser = 0,
    visRowProp = 0,
    visRowFormat = 0
} VisRowIndices;

typedef enum tagVisRowTags {
    visTagBase = 130,
    visTagRowVoid = 180,
    visTagInvalid = -1,
    visTagComponent = 137,
    visTagMoveTo = 138,
    visTagLineTo = 139,
    visTagArcTo = 140,
    visTagEllipticalArcTo = 144,
    visTagSplineBeg = 165,
    visTagSplineSpan = 166,
    visTagTab0 = 136,
    visTagTab2 = 150,
    visTagTab10 = 151,
    visTagCtlPt = 162,
    visTagCtlPtTip = 170,
    visTagCnnctPt = 153,
    visTagCnnctNamed = 185,
    visTagCnnctPtABCD = 186,
    visTagCnnctNamedABCD = 187
} VisRowTags;

typedef enum tagVisCellIndices {
    visXFormPinX = 0,
    visXFormPinY = 1,
    visXFormWidth = 2,
    visXFormHeight = 3,
    visXFormLocPinX = 4,
    visXFormLocPinY = 5,
    visXFormAngle = 6,
    visXFormFlipX = 7,
    visXFormFlipY = 8,
    visXFormResizeMode = 9,
    visLineWeight = 0,
    visLineColor = 1,
    visLinePattern = 2,
    visLineRounding = 3,
    visLineArrowSize = 4,
    visLineBeginArrow = 5,
    visLineEndArrow = 6,
    visLineEndCap = 7,
    visFillForegnd = 0,
    visFillBkgnd = 1,
    visFillPattern = 2,
    visFillShdwForegnd = 3,
    visFillShdwBkgnd = 4,
    visFillShdwPattern = 5,
    vis1DBeginX = 0,
    vis1DBeginY = 1,
    vis1DEndX = 2,
    vis1DEndY = 3,
    visEvtCellTheData = 0,
    visEvtCellTheText = 1,
    visEvtCellDblClick = 2,
    visEvtCellXFMod = 3,
    visEvtCellDrop = 4,
    visLayerMember = 0,
    visGuideFlags = 2,
    visStyleIncludesLine = 0,
    visStyleIncludesFill = 1,
    visStyleIncludesText = 2,
    visFrgnImgOffsetX = 0,
    visFrgnImgOffsetY = 1,
    visFrgnImgWidth = 2,
    visFrgnImgHeight = 3,
    visPageWidth = 0,
    visPageHeight = 1,
    visPageShdwOffsetX = 2,
    visPageShdwOffsetY = 3,
    visPageScale = 4,
    visPageDrawingScale = 5,
    visPageDrawSizeType = 6,
    visPageDrawScaleType = 7,
    visTxtBlkLeftMargin = 0,
    visTxtBlkRightMargin = 1,
    visTxtBlkTopMargin = 2,
    visTxtBlkBottomMargin = 3,
    visTxtBlkVerticalAlign = 4,
    visTxtBlkBkgnd = 5,
    visAlignLeft = 0,
    visAlignCenter = 1,
    visAlignRight = 2,
    visAlignTop = 3,
    visAlignMiddle = 4,
    visAlignBottom = 5,
    visLockWidth = 0,
    visLockHeight = 1,
    visLockMoveX = 2,
    visLockMoveY = 3,
    visLockAspect = 4,
    visLockDelete = 5,
    visLockBegin = 6,
    visLockEnd = 7,
    visLockRotate = 8,
    visLockCrop = 9,
    visLockVtxEdit = 10,
    visLockTextEdit = 11,
    visLockFormat = 12,
    visLockGroup = 13,
    visLockCalcWH = 14,
    visLockSelect = 15,
    visObjHelp = 0,
    visCopyRight = 1,
    visNoObjHandles = 0,
    visNonPrinting = 1,
    visNoCtlHandles = 2,
    visNoAlignBox = 3,
    visUpdateAlignBox = 4,
    visHideText = 5,
    visDynFeedback = 8,
    visGlueType = 9,
    visWalkPref = 10,
    visBegTrigger = 11,
    visEndTrigger = 12,
    visLOFlags = 13,
    visLOInteraction = 14,
    visLOBehavior = 15,
    visXRulerDensity = 0,
    visYRulerDensity = 1,
    visXRulerOrigin = 4,
    visYRulerOrigin = 5,
    visXGridDensity = 6,
    visYGridDensity = 7,
    visXGridSpacing = 8,
    visYGridSpacing = 9,
    visXGridOrigin = 10,
    visYGridOrigin = 11,
    visHLinkDescription = 0,
    visHLinkAddress = 1,
    visHLinkSubAddress = 2,
    visHLinkExtraInfo = 3,
    visHLinkFrame = 4,
    visHLinkNewWin = 5,
    visCompNoFill = 0,
    visCompNoShow = 2,
    visX = 0,
    visY = 1,
    visBow = 2,
    visControlX = 2,
    visControlY = 3,
    visEccentricityAngle = 4,
    visAspectRatio = 5,
    visSplineKnot = 2,
    visSplineKnot2 = 3,
    visSplineKnot3 = 4,
    visSplineDegree = 5,
    visFieldCell = 0,
    visCharacterFont = 0,
    visCharacterColor = 1,
    visCharacterStyle = 2,
    visCharacterCase = 3,
    visCharacterPos = 4,
    visCharacterSize = 7,
    visIndentFirst = 0,
    visIndentLeft = 1,
    visIndentRight = 2,
    visSpaceLine = 3,
    visSpaceBefore = 4,
    visSpaceAfter = 5,
    visHorzAlign = 6,
    visTabStopCount = 0,
    visTabPos = 1,
    visTabAlign = 2,
    visScratchX = 0,
    visScratchY = 1,
    visScratchA = 2,
    visScratchB = 3,
    visScratchC = 4,
    visScratchD = 5,
    visCnnctA = 2,
    visCnnctB = 3,
    visCnnctC = 4,
    visCnnctD = 5,
    visCtlX = 0,
    visCtlY = 1,
    visCtlXDyn = 2,
    visCtlYDyn = 3,
    visCtlXCon = 4,
    visCtlYCon = 5,
    visCtlGlue = 6,
    visCtlType = 7,
    visCtlTip = 8,
    visActionMenu = 0,
    visActionPrompt = 1,
    visActionHelp = 2,
    visActionAction = 3,
    visActionChecked = 4,
    visActionDisabled = 5,
    visLayerName = 0,
    visLayerColor = 2,
    visLayerStatus = 3,
    visLayerVisible = 4,
    visLayerPrint = 5,
    visLayerActive = 6,
    visLayerLock = 7,
    visLayerSnap = 8,
    visLayerGlue = 9,
    visUserValue = 0,
    visUserPrompt = 1,
    visCustPropsValue = 0,
    visCustPropsPrompt = 1,
    visCustPropsLabel = 2,
    visCustPropsFormat = 3,
    visCustPropsSortKey = 4,
    visCustPropsType = 5,
    visCustPropsInvis = 6,
    visCustPropsAsk = 7
} VisCellIndices;

typedef enum tagVisCellVals {
    visXFormResizeDontCare = 0,
    visXFormResizeSpread = 1,
    visXFormResizeScale = 2,
    visNoFill = 0,
    visSolid = 1,
    visWideUpDiagonal = 2,
    visWideCross = 3,
    visWideDiagonalCross = 4,
    visWideDownDiagonal = 5,
    visWideHorz = 6,
    visWideVert = 7,
    visBackDotsMini = 8,
    visHalfAndHalf = 9,
    visForeDotsMini = 10,
    visForeDotsNarrow = 11,
    visForeDotsWide = 12,
    visThickHorz = 13,
    visThickVertical = 14,
    visThickDownDiagonal = 15,
    visThickUpDiagonal = 16,
    visThickDiagonalCross = 17,
    visBackDotsWide = 18,
    visThinHorz = 19,
    visThinVert = 20,
    visThinDownDiagonal = 21,
    visThinUpDiagonal = 22,
    visThinCross = 23,
    visThinDiagonalCross = 24,
    visGuideXActive = 1024,
    visGuideYActive = 2048,
    visPrintSetup = 0,
    visTight = 1,
    visStandard = 2,
    visCustom = 3,
    visLogical = 4,
    visDSMetric = 5,
    visDSEngr = 6,
    visDSArch = 7,
    visNoScale = 0,
    visArchitectural = 1,
    visEngineering = 2,
    visScaleCustom = 3,
    visScaleMetric = 4,
    visScaleMechanical = 5,
    visVertTop = 0,
    visVertMiddle = 1,
    visVertBottom = 2,
    visTxtBlkOpaque = 255,
    visDynFBDefault = 0,
    visDynFBUCon3Leg = 1,
    visDynFBUCon5Leg = 2,
    visGlueTypeDefault = 0,
    visGlueTypeTrigger = 1,
    visGlueTypeWalking = 2,
    visWalkPrefBegNS = 1,
    visWalkPrefEndNS = 2,
    visLOFlagsVisDecides = 0,
    visLOFlagsPlacable = 1,
    visLOFlagsRoutable = 2,
    visLOFlagsDont = 4,
    visLOFlagsPNRGroup = 8,
    visLOIPlaceNormal = 0,
    visLOIRouteNormal = 0,
    visLOBPlaceNormal = 0,
    visLOBRouteNormal = 0,
    visLOBRouteRightAng = 1,
    visLOBRouteStraight = 2,
    visLOBRouteFlowNS = 5,
    visLOBRouteFlowWE = 6,
    visLOBRouteTreeNS = 7,
    visLOBRouteTreeWE = 8,
    visRulerFine = 32,
    visRulerNormal = 16,
    visRulerCoarse = 8,
    visRulerFixed = 0,
    visGridFine = 8,
    visGridNormal = 4,
    visGridCoarse = 2,
    visGridFixed = 0,
    visBold = 1,
    visItalic = 2,
    visUnderLine = 4,
    visSmallCaps = 8,
    visCaseNormal = 0,
    visCaseAllCaps = 1,
    visCaseInitialCaps = 2,
    visPosNormal = 0,
    visPosSuper = 1,
    visPosSub = 2,
    visHorzLeft = 0,
    visHorzCenter = 1,
    visHorzRight = 2,
    visHorzJustify = 3,
    visHorzForce = 4,
    visTabStopLeft = 0,
    visTabStopCenter = 1,
    visTabStopRight = 2,
    visTabStopDecimal = 3,
    visTabStopComma = 4,
    visCtlProportional = 0,
    visCtlLocked = 1,
    visCtlOffsetMin = 2,
    visCtlOffsetMid = 3,
    visCtlOffsetMax = 4,
    visCtlProportionalHidden = 5,
    visCtlLockedHidden = 6,
    visCtlOffsetMinHidden = 7,
    visCtlOffsetMidHidden = 8,
    visCtlOffsetMaxHidden = 9,
    visNoLayerColor = 255,
    visLayerValid = 0,
    visLayerDeleted = 1,
    visLayerAvailable = 2,
    visPropTypeString = 0,
    visPropTypeListFix = 1,
    visPropTypeNumber = 2,
    visPropTypeBool = 3,
    visPropTypeListVar = 4
} VisCellVals;

typedef enum tagVisDefaultColors {
    visTransparent = 0,
    visBlack = 0,
    visWhite = 1,
    visRed = 2,
    visGreen = 3,
    visBlue = 4,
    visYellow = 5,
    visMagenta = 6,
    visCyan = 7,
    visDarkRed = 8,
    visDarkGreen = 9,
    visDarkBlue = 10,
    visDarkYellow = 11,
    visPurple = 12,
    visDarkCyan = 13,
    visGray = 14,
    visGray10 = 15,
    visGray20 = 16,
    visGray30 = 17,
    visGray40 = 18,
    visDarkGray = 19,
    visGray50 = 19,
    visGray60 = 20,
    visGray70 = 21,
    visGray80 = 22,
    visGray90 = 23
} VisDefaultColors;

typedef enum tagVisOpenSaveArgs {
    visOpenCopy = 1,
    visOpenRO = 2,
    visOpenDocked = 4,
    visOpenDontList = 8,
    visSaveAsRO = 1,
    visSaveAsWS = 2,
    visSavePrevNone = 0,
    visSavePrevDraft1st = 1,
    visSavePrevDetailed1st = 2,
    visSavePrevDraftAll = 4,
    visSavePrevDetailedAll = 8
} VisOpenSaveArgs;

typedef enum tagVisInsertObjArgs {
    visInsertLink = 8,
    visInsertIcon = 16,
    visInsertDontShow = 4096,
    visInsertAsControl = 8192,
    visInsertAsEmbed = 16384
} VisInsertObjArgs;

typedef enum tagVisGetSetArgs {
    visGetFloats = 0,
    visGetTruncatedInts = 1,
    visGetRoundedInts = 2,
    visGetStrings = 3,
    visGetFormulas = 4,
    visSetFormulas = 1,
    visSetBlastGuards = 2,
    visSetTestCircular = 4
} VisGetSetArgs;

typedef enum tagVisBoundingBoxArgs {
    visBBoxUprightWH = 1,
    visBBoxUprightText = 2,
    visBBoxExtents = 4,
    visBBoxIncludeGuides = 4096,
    visBBoxDrawingCoords = 8192,
    visBBoxNoNonPrint = 16384
} VisBoundingBoxArgs;

typedef enum tagVisHitTestResults {
    visHitOutside = 0,
    visHitOnBoundary = 1,
    visHitInside = 2
} VisHitTestResults;

typedef enum tagVisSelectArgs {
    visDeselect = 1,
    visSelect = 2,
    visSubSelect = 3,
    visSelectAll = 4,
    visDeselectAll = 256
} VisSelectArgs;

typedef enum tagVisUniqueIDArgs {
    visGetGUID = 0,
    visGetOrMakeGUID = 1,
    visDeleteGUID = 2
} VisUniqueIDArgs;

typedef enum tagVisExistsFlags {
    visExistsLocally = 1,
    visExistsAnywhere = 0
} VisExistsFlags;

typedef enum tagVisCellError {
    visErrorSuccess = 0,
    visErrorDivideByZero = 39,
    visErrorValue = 47,
    visErrorReference = 55,
    visErrorName = 61,
    visErrorNumber = 68,
    visErrorNotAvailable = 74
} VisCellError;

typedef enum tagVisRoundFlags {
    visTruncate = 0,
    visRound = 1
} VisRoundFlags;

typedef enum tagVisRunTypes {
    visCharPropRow = 1,
    visParaPropRow = 2,
    visTabPropRow = 3,
    visWordRun = 10,
    visParaRun = 11,
    visFieldRun = 20
} VisRunTypes;

typedef enum tagVisCharsBias {
    visBiasLetVisioChoose = 0,
    visBiasLeft = 1,
    visBiasRight = 2
} VisCharsBias;

typedef enum tagVisToolbarFlavors {
    visToolBarNone = -1,
    visToolBarOn = 0,
    visToolBarMSOffice = 0,
    visToolBarLotusSS = 0
} VisToolbarFlavors;

typedef enum tagVisDrawSplineFlags {
    visSplinePeriodic = 1,
    visSplineDoCircles = 2,
    visSplineAbrupt = 4,
    visSpline1D = 8
} VisDrawSplineFlags;

typedef enum tagVisGuideTypes {
    visPoint = 1,
    visHorz = 2,
    visVert = 3
} VisGuideTypes;

typedef enum tagVisFontAttributes {
    visFontRaster = 16,
    visFontDevice = 32,
    visFontScalable = 64,
    visFont0Alias = 128
} VisFontAttributes;

typedef enum tagVisStatCodes {
    visStatNormal = 0,
    visStatAppHasShutdown = 1,
    visStatDeleted = 2,
    visStatTouched = 4,
    visStatClosed = 8,
    visStatSuspended = 16
} VisStatCodes;

typedef enum tagVisEventCodes {
    visEvtIDInval = -1,
    visEvtCodeInval = 0,
    visEvtCodeDocCreate = 1,
    visEvtCodeDocOpen = 2,
    visEvtCodeDocSave = 3,
    visEvtCodeDocSaveAs = 4,
    visEvtCodeDocRunning = 5,
    visEvtCodeDocDesign = 6,
    visEvtCodeBefDocSave = 7,
    visEvtCodeBefDocSaveAs = 8,
    visEvtCodeBefForcedFlush = 200,
    visEvtCodeAfterForcedFlush = 201,
    visEvtCodeWinSelChange = 701,
    visEvtCodeBefWinSelDel = 702,
    visEvtCodeBefWinPageTurn = 703,
    visEvtCodeWinPageTurn = 704,
    visEvtCodeShapeDelete = 801,
    visEvtCodeBefSelDel = 901,
    visEvtCodeSelAdded = 902,
    visEvtAdd = 32768,
    visEvtDel = 16384,
    visEvtMod = 8192,
    visEvtWindow = 1,
    visEvtDoc = 2,
    visEvtStyle = 4,
    visEvtMaster = 8,
    visEvtPage = 16,
    visEvtLayer = 32,
    visEvtShape = 64,
    visEvtText = 128,
    visEvtConnect = 256,
    visEvtSection = 512,
    visEvtRow = 1024,
    visEvtCell = 2048,
    visEvtFormula = 4096,
    visEvtApp = 4096,
    visEvtAppActivate = 1,
    visEvtAppDeactivate = 2,
    visEvtObjActivate = 4,
    visEvtObjDeactivate = 8,
    visEvtBeforeQuit = 16,
    visEvtBeforeModal = 32,
    visEvtAfterModal = 64,
    visEvtWinActivate = 128,
    visEvtMarker = 256,
    visEvtNonePending = 512,
    visEvtIdle = 1024,
    visEvtCode1stUser = 28672,
    visEvtCodeLastUser = 32767,
    visEvtCodeCreate = 1,
    visEvtCodeOpen = 2,
    visActCodeRunAddon = 1,
    visActCodeAdvise = 2,
    visEvtIdMostRecent = 0
} VisEventCodes;

typedef enum tagVisObjectTypes {
    visObjTypeUnknown = 1,
    visObjTypeApp = 3,
    visObjTypeCell = 4,
    visObjTypeChars = 5,
    visObjTypeConnect = 8,
    visObjTypeConnects = 9,
    visObjTypeDoc = 10,
    visObjTypeDocs = 11,
    visObjTypeMaster = 12,
    visObjTypeMasters = 13,
    visObjTypePage = 14,
    visObjTypePages = 15,
    visObjTypeSelection = 16,
    visObjTypeShape = 17,
    visObjTypeShapes = 18,
    visObjTypeStyle = 19,
    visObjTypeStyles = 20,
    visObjTypeWindow = 21,
    visObjTypeWindows = 22,
    visObjTypeLayer = 25,
    visObjTypeLayers = 26,
    visObjTypeFont = 27,
    visObjTypeFonts = 28,
    visObjTypeColor = 29,
    visObjTypeColors = 30,
    visObjTypeAddon = 31,
    visObjTypeAddons = 32,
    visObjTypeEvent = 33,
    visObjTypeEventList = 34,
    visObjTypeGlobal = 36,
    visObjTypeHyperlink = 37,
    visObjTypeOLEObjects = 38,
    visObjTypeOLEObject = 39,
    visObjTypePaths = 40,
    visObjTypePath = 41,
    visObjTypeCurve = 42
} VisObjectTypes;

typedef enum tagVisFieldCategories {
    visFCatCustom = 0,
    visFCatDateTime = 1,
    visFCatDocument = 2,
    visFCatGeometry = 3,
    visFCatObject = 4,
    visFCatPage = 5,
    visFCatNotes = 6
} VisFieldCategories;

typedef enum tagVisFieldCodes {
    visFCodeCreateDate = 0,
    visFCodeCreateTime = 1,
    visFCodeCurrentDate = 2,
    visFCodeCurrentTime = 3,
    visFCodeEditDate = 4,
    visFCodeEditTime = 5,
    visFCodePrintDate = 6,
    visFCodePrintTime = 7,
    visFCodeCreator = 0,
    visFCodeDescription = 1,
    visFCodeDirectory = 2,
    visFCodeFileName = 3,
    visFCodeKeyWords = 4,
    visFCodeSubject = 5,
    visFCodeTitle = 6,
    visFCodeManager = 7,
    visFCodeCompany = 8,
    visFCodeCategory = 9,
    visFCodeHyperlinkBase = 10,
    visFCodeWidth = 0,
    visFCodeHeight = 1,
    visFCodeAngle = 2,
    visFCodeData1 = 0,
    visFCodeData2 = 1,
    visFCodeData3 = 2,
    visFCodeObjectID = 3,
    visFCodeMasterName = 4,
    visFCodeObjectName = 5,
    visFCodeObjectType = 6,
    visFCodeBackgroundName = 0,
    visFCodePageName = 1,
    visFCodeNumberOfPages = 2,
    visFCodePageNumber = 3
} VisFieldCodes;

typedef enum tagVisFieldFormats {
    visFmtNumGenNoUnits = 0,
    visFmtNumGenDefUnits = 1,
    visFmt0PlNoUnits = 2,
    visFmt0PlDefUnits = 3,
    visFmt1PlNoUnits = 4,
    visFmt1PlDefUnits = 5,
    visFmt2PlNoUnits = 6,
    visFmt2PlDefUnits = 7,
    visFmt3PlNoUnits = 8,
    visFmt3PlDefUnits = 9,
    visFmtFeetAndInches = 10,
    visFmtRadians = 11,
    visFmtDegrees = 12,
    visFmtFeetAndInches1Pl = 13,
    visFmtFeetAndInches2Pl = 14,
    visFmtFraction1PlNoUnits = 15,
    visFmtFraction1PlDefUnits = 16,
    visFmtFraction2PlNoUnits = 17,
    visFmtFraction2PlDefUnits = 18,
    visFmtDateShort = 20,
    visFmtDateLong = 21,
    visFmtDateMDYY = 22,
    visFmtDateMMDDYY = 23,
    visFmtDateMmmDYYYY = 24,
    visFmtDateMmmmDYYYY = 25,
    visFmtDateDMYY = 26,
    visFmtDateDDMMYY = 27,
    visFmtDateDMMMYYYY = 28,
    visFmtDateDMMMMYYYY = 29,
    visFmtTimeGen = 30,
    visFmtTimeHMM = 31,
    visFmtTimeHHMM = 32,
    visFmtTimeHMM24 = 33,
    visFmtTimeHHMM24 = 34,
    visFmtTimeHMMAMPM = 35,
    visFmtTimeHHMMAMPM = 36,
    visFmtStrNormal = 37,
    visFmtStrLower = 38,
    visFmtStrUpper = 39,
    visFmtJDategggeXmXdXww = 40,
    visFmtJDateyyyyXmXdXww = 41,
    visFmtJDategggeXmXdX = 42,
    visFmtJDateyyyyXmXdX = 43,
    visFmtJDateyyyymd = 44,
    visFmtJDateyymmdd = 45,
    visFmtJDatehmmaxpx = 46,
    visFmtJDateaxpxhmm = 47,
    visFmtJDateaxpxhXmmX = 48,
    visFmtJDatehXmmX = 49,
    visFmtCDategggeXmmmmXdddd = 50,
    visFmtCDateggeXmmmmXdddd = 51,
    visFmtCDategeXmmmmXdddd = 52
} VisFieldFormats;

typedef enum tagVisDocVersions {
    visVersionUnsaved = 0,
    visVersion10 = 65571,
    visVersion20 = 131072,
    visVersion30 = 196611,
    visVersion40 = 262144,
    visVersion50 = 327680
} VisDocVersions;

typedef enum tagVisMasterProperties {
    visLeft = 1,
    visCenter = 2,
    visRight = 3,
    visIconFormatVisio = 0,
    visIconFormatBMP = 2,
    visNormal = 1,
    visTall = 2,
    visWide = 3,
    visDouble = 4,
    visAutomatic = 1,
    visManual = 0,
    visMasIsLinePat = 1,
    visMasIsLineEnd = 2,
    visMasIsFillPat = 4,
    visMasLPTileDeform = 0,
    visMasLPTile = 16,
    visMasLPStretch = 32,
    visMasLPAnnotate = 48,
    visMasLPScale = 64,
    visMasLEDefault = 0,
    visMasLEUpright = 256,
    visMasLEScale = 1024,
    visMasFPTile = 0,
    visMasFPCenter = 4096,
    visMasFPStretch = 8192,
    visMasFPScale = 16384
} VisMasterProperties;

typedef enum tagVisFromParts {
    visConnectFromError = -1,
    visFromNone = 0,
    visLeftEdge = 1,
    visCenterEdge = 2,
    visRightEdge = 3,
    visBottomEdge = 4,
    visMiddleEdge = 5,
    visTopEdge = 6,
    visBeginX = 7,
    visBeginY = 8,
    visBegin = 9,
    visEndX = 10,
    visEndY = 11,
    visEnd = 12,
    visControlPoint = 100
} VisFromParts;

typedef enum tagVisToParts {
    visConnectToError = -1,
    visToNone = 0,
    visGuideX = 1,
    visGuideY = 2,
    visWholeShape = 3,
    visConnectionPoint = 100,
    visConnectError = -1,
    visNone = 0
} VisToParts;

typedef enum tagVisUIObjSets {
    visUIObjSetNoDocument = 1,
    visUIObjSetDrawing = 2,
    visUIObjSetStencil = 3,
    visUIObjSetShapeSheet = 4,
    visUIObjSetIcon = 5,
    visUIObjSetInPlace = 6,
    visUIObjSetPrintPreview = 7,
    visUIObjSetText = 8,
    visUIObjSetCntx_DrawObjSel = 9,
    visUIObjSetCntx_DrawOleObjSel = 10,
    visUIObjSetCntx_DrawNoObjSel = 11,
    visUIObjSetCntx_InPlaceNoObj = 12,
    visUIObjSetCntx_TextEdit = 13,
    visUIObjSetCntx_StencilRO = 14,
    visUIObjSetCntx_ShapeSheet = 15,
    visUIObjSetCntx_Toolbar = 16,
    visUIObjSetCntx_FullScreen = 17,
    visUIObjSetBinderInPlace = 18,
    visUIObjSetCntx_Debug = 19,
    visUIObjSetCntx_StencilRW = 20,
    visUIObjSetCntx_StencilDocked = 21,
    visUIObjSetHostingInPlace = 22,
    visUIObjSetCntx_Hyperlink = 23,
    visUIObjSetPal_LineColors = 24,
    visUIObjSetPal_LineWeights = 25,
    visUIObjSetPal_LinePatterns = 26,
    visUIObjSetPal_FillColors = 27,
    visUIObjSetPal_FillPatterns = 28,
    visUIObjSetPal_TextColors = 29,
    visUIObjSetPal_AlignShapes = 30,
    visUIObjSetPal_DistributeShapes = 31,
    visUIObjSetPal_Shadow = 32,
    visUIObjSetPal_LineEnds = 33,
    visUIObjSetPal_CornerRounding = 34
} VisUIObjSets;

typedef enum tagVisUICmds {
    visCmdHierarchical = 200,
    visCmdFileNew = 1001,
    visCmdFileOpen = 1002,
    visCmdFileClose = 1003,
    visCmdFileSave = 1004,
    visCmdFileSaveAs = 1005,
    visCmdFileSaveWorkspace = 1006,
    visCmdFileImport = 1007,
    visCmdFileSummaryInfoDlg = 1009,
    visCmdFilePrint = 1010,
    visCmdFileExit = 1016,
    visCmdEditUndo = 1017,
    visCmdEditRedo = 1018,
    visCmdEditRepeat = 1019,
    visCmdUFEditCut = 1020,
    visCmdUFEditCopy = 1021,
    visCmdUFEditPaste = 1022,
    visCmdUFEditClear = 1023,
    visCmdUFEditDuplicate = 1024,
    visCmdUFEditSelectAll = 1025,
    visCmdEditSelectSpecial = 1026,
    visCmdEditPasteSpecial = 1027,
    visCmdEditOpenObject = 1029,
    visCmdEditLinks = 1030,
    visCmdEditInsertObject = 1031,
    visCmdEditInsertField = 1032,
    visCmdViewFitInWindow = 1033,
    visCmdView75 = 1034,
    visCmdView100 = 1035,
    visCmdView150 = 1036,
    visCmdView200 = 1037,
    visCmdViewCustom = 1038,
    visCmdViewRulers = 1039,
    visCmdViewGrid = 1040,
    visCmdViewGuides = 1041,
    visCmdViewConnections = 1042,
    visCmdEditFind = 1043,
    visCmdViewStatusBar = 1044,
    visCmdObjectBringForward = 1045,
    visCmdObjectBringToFront = 1046,
    visCmdObjectSendBackward = 1047,
    visCmdObjectSendToBack = 1048,
    visCmdObjectAlignObjects = 1049,
    visCmdObjectConnectObjects = 1050,
    visCmdObjectGroup = 1051,
    visCmdObjectUngroup = 1052,
    visCmdObjectAddToGroup = 1053,
    visCmdObjectRemoveFromGroup = 1054,
    visCmdObjectConvertToGroup = 1055,
    visCmdObjectRotate90 = 1056,
    visCmdObjectFlipVertical = 1057,
    visCmdObjectFlipHorizontal = 1058,
    visCmdObjectReverse = 1059,
    visCmdObjectUnion = 1060,
    visCmdObjectCombine = 1061,
    visCmdObjectFragment = 1062,
    visCmdFormatStyle = 1063,
    visCmdFormatDefineStyles = 1064,
    visCmdFormatLine = 1065,
    visCmdFormatFill = 1066,
    visCmdFormatText = 1067,
    visCmdFormatFont = 1067,
    visCmdFormatParagraph = 1068,
    visCmdFormatTabs = 1069,
    visCmdFormatBlock = 1070,
    visCmdFormatBehavior = 1071,
    visCmdFormatProtection = 1072,
    visCmdFormatSpecial = 1073,
    visCmdOptionsEditDrawing = 1074,
    visCmdOptionsEditBackground = 1075,
    visCmdOptionsPageSetup = 1076,
    visCmdOptionsGoToDrawing = 1077,
    visCmdOptionsNewPage = 1078,
    visCmdOptionsDeletePages = 1079,
    visCmdOptionsReorderPages = 1080,
    visCmdOptionsPreferences = 1081,
    visCmdOptionsColorPaletteDlg = 1082,
    visCmdOptionsProtectDocument = 1083,
    visCmdOptionsSnapGlueSetup = 1084,
    visCmdWindowNewWindow = 1085,
    visCmdWindowCascadeAll = 1086,
    visCmdWindowTileAll = 1087,
    visCmdWindowShowShapeSheet = 1088,
    visCmdWindowShowMasterObjects = 1089,
    visCmdRunAddOnMenu = 1090,
    visCmdWindowShowDrawPage = 1091,
    visCmdHelpContents = 1092,
    visCmdDecreaseIndent = 1093,
    visCmdIncreaseIndent = 1094,
    visCmdDecreaseParaSpacing = 1095,
    visCmdIncreaseParaSpacing = 1096,
    visCmdTextRotate90 = 1098,
    visCmdHelpAboutVisio = 1100,
    visCmdStenEditIcon = 1101,
    visCmdStenEditDrawing = 1102,
    visCmdStenNameMaster = 1103,
    visCmdStenNewMaster = 1104,
    visCmdStenImageMaster = 1105,
    visCmdStenCleanup = 1106,
    visCmdSWShowValues = 1107,
    visCmdSWShowFormulas = 1108,
    visCmdSWShowSectionsDlg = 1109,
    visCmdSWPasteNameDlg = 1110,
    visCmdSWPasteFunctionDlg = 1111,
    visCmdSWInsertRow = 1112,
    visCmdSWInsertRowAfter = 1113,
    visCmdSWChangeRowTypeDlg = 1114,
    visCmdSWDeleteRow = 1115,
    visCmdSWAddSectionDlg = 1116,
    visCmdSWDeleteSection = 1117,
    visCmdFormatDoubleClick = 1118,
    visCmdDrawLineStyle = 1122,
    visCmdDrawFillStyle = 1123,
    visCmdDrawSnap = 1124,
    visCmdDrawGlue = 1125,
    visCmdDrawZoom = 1126,
    visCmdTextStyle = 1128,
    visCmdTextFont = 1129,
    visCmdTextSize = 1130,
    visCmdTextBold = 1131,
    visCmdTextItalic = 1132,
    visCmdTextSmallCaps = 1133,
    visCmdTextSuperscript = 1134,
    visCmdTextSubscript = 1135,
    visCmdTextUline = 1136,
    visCmdSWCancel = 1139,
    visCmdSWAccept = 1140,
    visCmdSWFormula = 1141,
    visCmdSWShowToggle = 1142,
    visCmdIconLeftColor = 1143,
    visCmdIconPencilTool = 1145,
    visCmdRecalcObjectWH = 1146,
    visCmdTurnToPrevPage = 1147,
    visCmdTurnToNextPage = 1148,
    visCmdEditReplace = 1179,
    visCmdAlignObjectLeft = 1196,
    visCmdAlignObjectCenter = 1197,
    visCmdAlignObjectRight = 1198,
    visCmdAlignObjectTop = 1199,
    visCmdAlignObjectMiddle = 1200,
    visCmdAlignObjectBottom = 1201,
    visCmdCenterDrawing = 1202,
    visCmdDeselectAll = 1213,
    visCmdTextEditState = 1214,
    visCmdZoomIn = 1216,
    visCmdZoomOut = 1217,
    visCmdDRPointerTool = 1219,
    visCmdDRPencilTool = 1220,
    visCmdDRLineTool = 1221,
    visCmdDRQtrArcTool = 1222,
    visCmdDRRectTool = 1223,
    visCmdDROvalTool = 1224,
    visCmdDRConnectorTool = 1225,
    visCmdDRConnectionTool = 1226,
    visCmdDRTextTool = 1227,
    visCmdDRRotateTool = 1228,
    visCmdObjectDistributeDlg = 1230,
    visCmdDistributeHSpace = 1231,
    visCmdDistributeCenter = 1233,
    visCmdDistributeVSpace = 1235,
    visCmdDistributeMiddle = 1237,
    visCmdDlgLotusNotesFields = 1245,
    visCmdToolsSpelling = 1270,
    visCmdFormatPainter = 1271,
    visCmdStenFloating = 1274,
    visCmdView50 = 1279,
    visCmdView400 = 1280,
    visCmdSendAsMail = 1292,
    visCmdShapeActions = 1309,
    visCmdDRSplineTool = 1311,
    visCmdFormatCustPropEdit = 1312,
    visCmdRulerGridDlg = 1318,
    visCmdFormatShadow = 1333,
    visCmdFormatCorners = 1334,
    visCmdToolsInventory = 1335,
    visCmdPageSizeScale = 1076,
    visCmdStenSwitchSides = 1342,
    visCmdToolsArrayShapesAddOn = 1354,
    visCmdSetLineWeight = 1355,
    visCmdSetLinePattern = 1356,
    visCmdSetLineEnds = 1357,
    visCmdSetLineCornerStyle = 1358,
    visCmdSetLineColor = 1359,
    visCmdCloseWindow = 1361,
    visCmdSetFillShadow = 1379,
    visCmdSetFillColor = 1385,
    visCmdHelpMode = 1386,
    visCmdOffsetDlg = 1387,
    visCmdDesignMode = 1388,
    visCmdShapeExplorer = 1389,
    visCmdSetFillPattern = 1399,
    visCmdSetCharColor = 1404,
    visCmdSetCharSizeUp = 1405,
    visCmdSetCharSizeDown = 1406,
    visCmdTextHAlignLeft = 1407,
    visCmdTextHAlignCenter = 1408,
    visCmdTextHAlignRight = 1409,
    visCmdTextHAlignJustify = 1412,
    visCmdTextVAlignTop = 1413,
    visCmdTextVAlignMiddle = 1414,
    visCmdTextVAlignBottom = 1422,
    visCmdStampTool = 1424,
    visCmdObjectInfoDlg = 1425,
    visCmdObjectHelp = 1428,
    visCmdFileOpenStencil = 1442,
    visCmdPrintPage = 1443,
    visCmdSWShapeActionDlg = 1444,
    visCmdLayerDlg = 1446,
    visCmdLayerSetupDlg = 1448,
    visCmdCropTool = 1449,
    visCmdTextBlockTool = 1451,
    visCmdStenClose = 1452,
    visCmdIntersect = 1453,
    visCmdSubtract = 1454,
    visCmdStenActivate = 1458,
    visCmdStenIconAndName = 1480,
    visCmdStenIconOnly = 1481,
    visCmdStenNameOnly = 1482,
    visCmdStenAutoArrange = 1483,
    visCmdPrintPreview = 1490,
    visCmdOpenInVisio = 1491,
    visCmdFullScreenMode = 1492,
    visCmdRotate90Clockwise = 1494,
    visCmdZoomLast = 1495,
    visCmdZoomPageWidth = 1496,
    visCmdToolbarsDlg = 1500,
    visCmdINETAddToFavorites = 1506,
    visCmdViewPageBreaks = 1509,
    visCmdZoomSingleTile = 1512,
    visCmdPreviousTile = 1513,
    visCmdNextTile = 1514,
    visCmdFirstTile = 1515,
    visCmdLastTile = 1516,
    visCmdInsertAutoCADAddOn = 1521,
    visCmdInsertControlDlg = 1522,
    visCmdJoin = 1533,
    visCmdTrim = 1534,
    visCmdDlgCustomFit = 1536,
    visCmdFitCurve = 1538,
    visCmdIconBucketTool = 1543,
    visCmdIconLassoTool = 1544,
    visCmdIconSelectNet = 1545,
    visCmdToolsLayoutShapesDlg = 1574,
    visCmdToolsRunVBE = 1576,
    visCmdToolsMacroDlg = 1577,
    visCmdFileNewBlankDrawing = 1579,
    visCmdFileNewBlankStencil = 1582,
    visCmdProgRefHelp = 1584,
    visCmdInsertHyperLink = 1585,
    visCmdHelpTemplates = 1586,
    visCmdEmailRouting = 1588,
    visCmdSendToExchange = 1589,
    visCmdINETUserSearchPage = 1595,
    visCmdINETVisioHomePage = 1596,
    visCmdINETGoForward = 1598,
    visCmdINETGoBack = 1599,
    visCmdOpenActiveObject = 1601,
    visCmdCancelInPlaceEditing = 1602,
    visCmdINETVisioSolutionsLibrary = 1604,
    visCmdINETKnowledgeBase = 1605,
    visCmdINETDiagrammingResources = 1606,
    visCmdINETOpenHlink = 1607,
    visCmdINETOpenHlinkNewWnd = 1608,
    visCmdINETCopyHyperlink = 1610,
    visCmdHyperlinkHier = 1611,
    visCmdINETEditHyperlink = 1619,
    visCmdINETPasteAsHyperlink = 1620,
    visCmdBullets = 1633,
    visCmdShapeLayerToolbar = 1634,
    visCmdGoToPageToolbar = 1635,
    visCmdFormatAllTextProps = 1642,
    visCmdBrowseSampleDrawings = 1645
} VisUICmds;

typedef enum tagVisUICtrlTypes {
    visCtrlTypeEND = 0,
    visCtrlTypeSTATE = 1,
    visCtrlTypeBUTTON = 2,
    visCtrlTypeSTATE_BUTTON = 3,
    visCtrlTypePALETTEBUTTON = 16,
    visCtrlTypeHIERBUTTON = 4,
    visCtrlTypeSTATE_HIERBUTTON = 5,
    visCtrlTypeDROPBUTTON = 8,
    visCtrlTypeSTATE_DROPBUTTON = 9,
    visCtrlTypeSPINBUTTON = 16,
    visCtrlTypePUSHBUTTON = 32,
    visCtrlTypeOWNERDRAW_BUTTON = 33,
    visCtrlTypeEDITBOX = 64,
    visCtrlTypeCOMBOBOX = 128,
    visCtrlTypeCOMBODRAW = 256,
    visCtrlTypeLISTBOX = 512,
    visCtrlTypeLISTBOXDRAW = 513,
    visCtrlTypeCOLORBOX = 1024,
    visCtrlTypeLABEL = 2048,
    visCtrlTypeMESSAGE = 4096,
    visCtrlTypeSPACER = 16384
} VisUICtrlTypes;

typedef enum tagVisUISpacingTypes {
    visCtrlSpacingNONE = 0,
    visCtrlSpacingVARIABLE_BEFORE = 1,
    visCtrlSpacingVARIABLE_AFTER = 2,
    visCtrlSpacingFIXED_BEFORE = 4,
    visCtrlSpacingFIXED_AFTER = 8,
    visCtrlSpacingNEW_ROW = 16,
    visCtrlSpacingTB_NOTFIXED = 32,
    visCtrlSpacingPALETTERIGHT = 64,
    visCtrlSpacingNEW_ROW_PALETTERIGHT = 80
} VisUISpacingTypes;

typedef enum tagVisUICtrlAtts {
    visCtrlAlignmentLEFT = 1,
    visCtrlAlignmentCENTER = 2,
    visCtrlAlignmentRIGHT = 4,
    visCtrlAlignmentBOX = 128,
    visCtrlAlignmentLEFTBOX = 129,
    visCtrlAlignmentCENTERBOX = 130,
    visCtrlAlignmentRIGHTBOX = 132
} VisUICtrlAtts;

typedef enum tagVisUICtrlIDs {
    visCtrlIDNEW = 8383,
    visCtrlIDOPEN = 1,
    visCtrlIDOPENSTEN = 2,
    visCtrlIDSAVE = 3,
    visCtrlIDPRINT = 4,
    visCtrlIDPREVIEW = 5,
    visCtrlIDCUT = 6,
    visCtrlIDCOPY = 7,
    visCtrlIDPASTE = 8,
    visCtrlIDCLEAR = 9,
    visCtrlIDUNDO = 10,
    visCtrlIDREDO = 11,
    visCtrlIDREPEAT = 12,
    visCtrlIDPREVIOUSPAGE = 13,
    visCtrlIDNEXTPAGE = 14,
    visCtrlIDZOOMOUT = 15,
    visCtrlIDZOOMIN = 16,
    visCtrlIDZOOM100 = 17,
    visCtrlIDFLIPHORZ = 18,
    visCtrlIDFLIPVERT = 19,
    visCtrlIDPOINTERTOOL = 20,
    visCtrlIDPENCILTOOL = 21,
    visCtrlIDLINETOOL = 22,
    visCtrlIDQTRARCTOOL = 23,
    visCtrlIDRECTTOOL = 24,
    visCtrlIDOVALTOOL = 25,
    visCtrlIDSTAMPTOOL = 26,
    visCtrlIDTEXTTOOL = 27,
    visCtrlIDROTATETOOL = 28,
    visCtrlIDCROPTOOL = 29,
    visCtrlIDCONNECTIONPTTOOL = 30,
    visCtrlIDSNAP = 31,
    visCtrlIDGLUE = 32,
    visCtrlIDRULER = 33,
    visCtrlIDGRID = 34,
    visCtrlIDGUIDE = 35,
    visCtrlIDCONNECT = 36,
    visCtrlIDROTATECLOCKWISE = 37,
    visCtrlIDROTATECOUNTER = 38,
    visCtrlIDNEWWINDOW = 39,
    visCtrlIDCORNERSTYLE = 40,
    visCtrlIDLINEEND = 41,
    visCtrlIDSHADOWSTYLE = 42,
    visCtrlIDFILLCOLOR = 43,
    visCtrlIDLINECOLOR = 44,
    visCtrlIDLINEWEIGHT = 45,
    visCtrlIDLINEPATTERN = 46,
    visCtrlIDFILLPATTERN = 47,
    visCtrlIDPOINTSIZEDOWN = 48,
    visCtrlIDPOINTSIZEUP = 49,
    visCtrlIDBOLD = 50,
    visCtrlIDITALIC = 51,
    visCtrlIDULINE = 52,
    visCtrlIDSUPERSCRIPT = 53,
    visCtrlIDSUBSCRIPT = 54,
    visCtrlIDTEXTCOLOR = 55,
    visCtrlIDTEXTLEFT = 56,
    visCtrlIDTEXTCENTER = 57,
    visCtrlIDTEXTRIGHT = 58,
    visCtrlIDTEXTJUSTIFY = 59,
    visCtrlIDTEXTTOP = 60,
    visCtrlIDTEXTMIDDLE = 61,
    visCtrlIDTEXTBOTTOM = 62,
    visCtrlIDALIGN = 63,
    visCtrlIDALIGNLEFT = 64,
    visCtrlIDALIGNCENTER = 65,
    visCtrlIDALIGNRIGHT = 66,
    visCtrlIDALIGNTOP = 67,
    visCtrlIDALIGNMIDDLE = 68,
    visCtrlIDALIGNBOTTOM = 69,
    visCtrlIDDISTRIBUTE = 70,
    visCtrlIDDHORZ_EQSPACE = 71,
    visCtrlIDDHORZ_CENTER = 72,
    visCtrlIDDVERT_EQSPACE = 73,
    visCtrlIDDVERT_MIDDLE = 74,
    visCtrlIDCONNECTSHAPES = 75,
    visCtrlIDFIRSTPAGE = 76,
    visCtrlIDLASTPAGE = 77,
    visCtrlIDPAGEBREAKS = 78,
    visCtrlIDICONNAME = 80,
    visCtrlIDICONONLY = 81,
    visCtrlIDNAMEONLY = 82,
    visCtrlIDARRANGEICONS = 83,
    visCtrlIDCANCELFORMULA = 84,
    visCtrlIDACCEPTFORMULA = 85,
    visCtrlIDICONPENCIL = 86,
    visCtrlIDICONBUCKET = 87,
    visCtrlIDICONLASSO = 88,
    visCtrlIDICONSELNET = 89,
    visCtrlIDBRINGFRONT = 90,
    visCtrlIDSENDBACK = 91,
    visCtrlIDGROUP = 92,
    visCtrlIDUNGROUP = 93,
    visCtrlIDCASCADE = 94,
    visCtrlIDTILE = 95,
    visCtrlIDCONNECTORTOOL = 96,
    visCtrlIDTEXTBLOCKTOOL = 97,
    visCtrlIDWHOLEPAGE = 98,
    visCtrlIDSINGLETILE = 99,
    visCtrlIDFORMULA = 190,
    visCtrlIDSPACER = 191,
    visCtrlIDALLSTYLESCOMBO = 200,
    visCtrlIDTEXTSTYLECOMBO = 201,
    visCtrlIDLINESTYLECOMBO = 202,
    visCtrlIDFILLSTYLECOMBO = 203,
    visCtrlIDZOOMCOMBO = 204,
    visCtrlIDFONTCOMBO = 205,
    visCtrlIDPOINTSIZECOMBO = 206,
    visCtrlIDALLSTYLESLIST = 220,
    visCtrlIDTEXTSTYLELIST = 221,
    visCtrlIDLINESTYLELIST = 222,
    visCtrlIDFILLSTYLELIST = 223,
    visCtrlIDZOOMLIST = 224,
    visCtrlIDFONTLIST = 225,
    visCtrlIDPOINTSIZELIST = 226,
    visCtrlIDGOTOPAGELIST = 227,
    visCtrlIDCLOSE = 240,
    visCtrlIDLEFTCOLORBOX = 300,
    visCtrlIDRIGHTCOLORBOX = 301,
    visCtrlIDCOLOR1 = 302,
    visCtrlIDCOLOR2 = 303,
    visCtrlIDCOLOR3 = 304,
    visCtrlIDCOLOR4 = 305,
    visCtrlIDCOLOR5 = 306,
    visCtrlIDCOLOR6 = 307,
    visCtrlIDCOLOR7 = 308,
    visCtrlIDCOLOR8 = 309,
    visCtrlIDCOLOR9 = 310,
    visCtrlIDCOLOR10 = 311,
    visCtrlIDCOLOR11 = 312,
    visCtrlIDCOLOR12 = 313,
    visCtrlIDCOLOR13 = 314,
    visCtrlIDCOLOR14 = 315,
    visCtrlIDCOLOR15 = 316,
    visCtrlIDCOLOR16 = 317,
    visCtrlIDTRANSPARENT = 318,
    visCtrlIDALLSTYLESLABEL = 400,
    visCtrlIDTEXTSTYLELABEL = 401,
    visCtrlIDLINESTYLELABEL = 402,
    visCtrlIDFILLSTYLELABEL = 403,
    visCtrlIDZOOMLABEL = 404,
    visCtrlIDFONTLABEL = 405,
    visCtrlIDPOINTSIZELABEL = 406,
    visCtrlIDLEFTCOLORLABEL = 407,
    visCtrlIDRIGHTCOLORLABEL = 408,
    visCtrlIDSTATUSLABEL = 409,
    visCtrlIDPREVIEWLABEL = 410,
    visCtrlIDSTATUSREADOUT = 500,
    visCtrlIDSTATUSMSG_1 = 501,
    visCtrlIDSTATUSMSG_2 = 502,
    visCtrlIDSTATUSMSG_3 = 503,
    visCtrlIDSTATUSMSG_4 = 504,
    visCtrlIDSTATUSMSG_5 = 505,
    visCtrlIDSTATUSMSG_6 = 506,
    visCtrlIDSTATUSMSG_7 = 507,
    visCtrlIDSTATUSMSG_8 = 508,
    visCtrlIDSTATUSMSG_9 = 509,
    visCtrlIDSPLINETOOL = 79,
    visCtrlIDSPELLING = 100,
    visCtrlIDFORMATPAINTER = 101,
    visCtrlIDHELPMODE = 102,
    visCtrlIDLAYERPROPERTIES = 103,
    visCtrlIDLAYOUTSHAPES = 104,
    visCtrlIDINSERTHYPERLINK = 105,
    visCtrlIDSEARCHTHEWEB = 106,
    visCtrlIDGOBACK = 107,
    visCtrlIDGOFORWARD = 108,
    visCtrlIDWEBTOOLBAR = 109,
    visCtrlIDSHAPEEXPL = 110,
    visCtrlIDCUSTPROP = 111,
    visCtrlIDROTATETEXT = 112,
    visCtrlIDBULLETS = 113,
    visCtrlIDDECRINDENT = 114,
    visCtrlIDINCRINDENT = 115,
    visCtrlIDDECRPARA = 116,
    visCtrlIDINCRPARA = 117,
    visCtrlIDINSERTCONTROL = 118,
    visCtrlIDDESIGNMODE = 119,
    visCtrlIDSHAPESHEET = 120,
    visCtrlIDSHAPELAYER = 247,
    visCtrlIDGOTOPAGE = 207,
    visCtrlIDLINECOLORS = 241,
    visCtrlIDLINEWEIGHTS = 242,
    visCtrlIDLINEPATTERNS = 243,
    visCtrlIDFILLCOLORS = 244,
    visCtrlIDFILLPATTERNS = 245,
    visCtrlIDTEXTCOLORS = 246,
    visCtrlIDMACROS = 121,
    visCtrlIDVBEDITOR = 122,
    visCtrlIDSHAPELAYERCOMBO = 208,
    visCtrlIDSHAPELAYERLIST = 228,
    visCtrlIDALIGNSHAPES = 260,
    visCtrlIDDISTRIBUTESHAPES = 261,
    visCtrlIDMSG_PAGES = 510
} VisUICtrlIDs;

typedef enum tagVisUIIconIDs {
    visIconIXNEW = 0,
    visIconIXOPEN = 1,
    visIconIXOPENSTENCIL = 2,
    visIconIXSAVE = 3,
    visIconIXPRINT = 4,
    visIconIXPRINTPREVIEW = 5,
    visIconIXCUT = 6,
    visIconIXCOPY = 7,
    visIconIXPASTE = 8,
    visIconIXCLEAR = 9,
    visIconIXUNDO = 10,
    visIconIXREDO = 11,
    visIconIXREPEAT = 12,
    visIconIXPREVIOUSPAGE = 13,
    visIconIXNEXTPAGE = 14,
    visIconIXZOOMOUT = 15,
    visIconIXZOOMIN = 16,
    visIconIXZOOM100 = 17,
    visIconIXFLIPHORIZONTAL = 18,
    visIconIXFLIPVERTICAL = 19,
    visIconIXPOINTERTOOL = 20,
    visIconIXPENCILTOOL = 21,
    visIconIXLINETOOL = 22,
    visIconIXQTRARCTOOL = 23,
    visIconIXRECTANGLETOOL = 24,
    visIconIXOVALTOOL = 25,
    visIconIXSTAMPTOOL = 26,
    visIconIXTEXTOOL = 27,
    visIconIXROTATETOOL = 28,
    visIconIXCROP = 29,
    visIconIXCONNECTIONPTTOOL = 30,
    visIconIXSNAP = 31,
    visIconIXGLUE = 32,
    visIconIXRULER = 33,
    visIconIXGRID = 34,
    visIconIXGUIDE = 35,
    visIconIXCONNECTIONPOINTS = 36,
    visIconIXROTATECLOCKWISE = 37,
    visIconIXROTATECOUNTERCLOCKWISE = 38,
    visIconIXNEWWINDOW = 39,
    visIconIXCORNERSTYLE = 40,
    visIconIXLINEEND = 41,
    visIconIXSHADOWSTYLE = 42,
    visIconIXFILLCOLOR = 43,
    visIconIXLINECOLOR = 44,
    visIconIXLINEWEIGHT = 45,
    visIconIXLINEPATTERN = 46,
    visIconIXFILLPATTERN = 47,
    visIconIXPOINTSIZEDOWN = 48,
    visIconIXPOINTSIZEUP = 49,
    visIconIXBOLD = 50,
    visIconIXITALIC = 51,
    visIconIXUNDERLINE = 52,
    visIconIXSUPERSCRIPT = 53,
    visIconIXSUBSCRIPT = 54,
    visIconIXTEXTCOLOR = 55,
    visIconIXTEXTALIGNLEFT = 56,
    visIconIXTEXTALIGNCENTER = 57,
    visIconIXTEXTALIGNRIGHT = 58,
    visIconIXTEXTALIGNJUSTIFY = 59,
    visIconIXTEXTALIGNTOP = 60,
    visIconIXTEXTALIGNMIDDLE = 61,
    visIconIXTEXTALIGNBOTTOM = 62,
    visIconIXALIGN = 63,
    visIconIXALIGNLEFT = 64,
    visIconIXALIGNCENTER = 65,
    visIconIXALIGNRIGHT = 66,
    visIconIXALIGNTOP = 67,
    visIconIXALIGNMIDDLE = 68,
    visIconIXALIGNBOTTOM = 69,
    visIconIXDISTRIBUTE = 70,
    visIconIXDHORZ_EQSPACE = 71,
    visIconIXDHORZ_CENTER = 72,
    visIconIXDVERT_EQSPACE = 73,
    visIconIXDVERT_MIDDLE = 74,
    visIconIXCONNECTSHAPES = 75,
    visIconIXFIRSTPAGE = 76,
    visIconIXLASTPAGE = 77,
    visIconIXPAGEBREAKS = 78,
    visIconIXSPLINETOOL = 79,
    visIconIXICONNAME = 80,
    visIconIXICONONLY = 81,
    visIconIXNAMEONLY = 82,
    visIconIXARRANGE = 83,
    visIconIXCANCEL = 84,
    visIconIXACCEPT = 85,
    visIconIXICONPENCIL = 86,
    visIconIXICONBUCKET = 87,
    visIconIXICONLASSO = 88,
    visIconIXICONSELNET = 89,
    visIconIXBRINGFRONT = 90,
    visIconIXSENDBACK = 91,
    visIconIXGROUP = 92,
    visIconIXUNGROUP = 93,
    visIconIXCASCADE = 94,
    visIconIXTILE = 95,
    visIconIXCONNECTORTOOL = 96,
    visIconIXTEXTBLOCKTOOL = 97,
    visIconIXWHOLEPAGE = 98,
    visIconIXSINGLETILE = 99,
    visIconIXSPELLING = 100,
    visIconIXFORMATPAINTER = 101,
    visIconIXHELPMODE = 102,
    visIconIXLAYERPROPERTIES = 103,
    visIconIXLAYOUTSHAPES = 104,
    visIconIXINSERTHYPERLINK = 105,
    visIconIXSEARCHTHEWEB = 106,
    visIconIXGOBACK = 107,
    visIconIXGOFORWARD = 108,
    visIconIXWEBTOOLBAR = 109,
    visIconIXSHAPEEXPL = 110,
    visIconIXCUSTPROP = 111,
    visIconIXROTATETEXT = 112,
    visIconIXBULLETS = 113,
    visIconIXDECRINDENT = 114,
    visIconIXINCRINDENT = 115,
    visIconIXDECRPARA = 116,
    visIconIXINCRPARA = 117,
    visIconIXINSERTCONTROL = 118,
    visIconIXDESIGNMODE = 119,
    visIconIXSHAPESHEET = 120,
    visIconIXMACROS = 121,
    visIconIXVBEDITOR = 122
} VisUIIconIDs;

typedef enum tagVisUIStringIDs {
    visStrIDBASESTRINGID = 2000,
    visStrIDALLSTYLES = 2000,
    visStrIDTEXTSTYLE = 2001,
    visStrIDLINESTYLE = 2002,
    visStrIDFILLSTYLE = 2003,
    visStrIDZOOM = 2004,
    visStrIDFONT = 2005,
    visStrIDPOINTSIZE = 2006,
    visStrIDLEFTCOLOR = 2007,
    visStrIDRIGHTCOLOR = 2008,
    visStrIDSTATUS = 2009,
    visStrIDPRINTPREVIEW = 2010,
    visStrIDTEXTEDIT = 2011,
    visStrIDCLOSE = 2050,
    visStrIDNONE = 2300,
    visStrIDCHANGE = 2301,
    visStrIDSPACE = 2302,
    visStrIDREADY = 2320,
    visStrIDWAIT = 2321,
    visStrIDDRAG = 2322,
    visStrIDDRAW = 2323,
    visStrIDEDIT = 2324,
    visStrIDMOVE = 2325,
    visStrIDSIZE = 2326,
    visStrIDROTATE = 2327,
    visStrIDCROP = 2328,
    visStrIDSCROLL = 2329,
    visStrIDADD = 2330,
    visStrIDEXTEND = 2331,
    visStrIDCOPY = 2332,
    visStrIDLINECOLORS = 2051,
    visStrIDLINEWEIGHTS = 2052,
    visStrIDLINEPATTERNS = 2053,
    visStrIDFILLCOLORS = 2054,
    visStrIDFILLPATTERNS = 2055,
    visStrIDTEXTCOLORS = 2056,
    visStrIDSHADOWS = 2057,
    visStrIDLINEENDS = 2058,
    visStrIDCORNERS = 2059,
    visStrIDNOSHADOW = 2060
} VisUIStringIDs;

DEFINE_GUID(IID_IVApplication,0x000D0700L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVApplication */
#undef INTERFACE
#define INTERFACE IVApplication

DECLARE_INTERFACE_(IVApplication, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVApplication methods */
    STDMETHOD(get_ActiveDocument)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ActivePage)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ActiveWindow)(THIS_ IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Documents)(THIS_ IVDocuments FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_OnDataChangeDelay)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(put_OnDataChangeDelay)(THIS_ long Delay) PURE;
    STDMETHOD(get_ProcessID)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(Quit)(THIS) PURE;
    STDMETHOD(Redo)(THIS) PURE;
    STDMETHOD(get_ScreenUpdating)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ScreenUpdating)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Undo)(THIS) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_WindowHandle)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Windows)(THIS_ IVWindows FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Language)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(get_IsVisio16)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_IsVisio32)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_WindowHandle32)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(get_InstanceHandle)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_InstanceHandle32)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(get_BuiltInMenus)(THIS_ IVUIObject FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_BuiltInToolbars)(THIS_ short fIgnored, IVUIObject FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_CustomMenus)(THIS_ IVUIObject FAR* FAR* lpdispRet) PURE;
    STDMETHOD(SetCustomMenus)(THIS_ IVUIObject FAR* MenusObject) PURE;
    STDMETHOD(get_CustomMenusFile)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_CustomMenusFile)(THIS_ BSTR FileName) PURE;
    STDMETHOD(ClearCustomMenus)(THIS) PURE;
    STDMETHOD(get_CustomToolbars)(THIS_ IVUIObject FAR* FAR* lpdispRet) PURE;
    STDMETHOD(SetCustomToolbars)(THIS_ IVUIObject FAR* ToolbarsObject) PURE;
    STDMETHOD(get_CustomToolbarsFile)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_CustomToolbarsFile)(THIS_ BSTR FileName) PURE;
    STDMETHOD(ClearCustomToolbars)(THIS) PURE;
    STDMETHOD(get_AddonPaths)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_AddonPaths)(THIS_ BSTR PathsString) PURE;
    STDMETHOD(get_DrawingPaths)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_DrawingPaths)(THIS_ BSTR PathsString) PURE;
    STDMETHOD(get_FilterPaths)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_FilterPaths)(THIS_ BSTR PathsString) PURE;
    STDMETHOD(get_HelpPaths)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_HelpPaths)(THIS_ BSTR PathsString) PURE;
    STDMETHOD(get_StartupPaths)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_StartupPaths)(THIS_ BSTR PathsString) PURE;
    STDMETHOD(get_StencilPaths)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_StencilPaths)(THIS_ BSTR PathsString) PURE;
    STDMETHOD(get_TemplatePaths)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_TemplatePaths)(THIS_ BSTR PathsString) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR UserName) PURE;
    STDMETHOD(get_PromptForSummary)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_PromptForSummary)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_Addons)(THIS_ IVAddons FAR* FAR* lpdispRet) PURE;
    STDMETHOD(SaveWorkspaceAs)(THIS_ BSTR FileName) PURE;
    STDMETHOD(DoCmd)(THIS_ short CommandID) PURE;
    STDMETHOD(get_ProfileName)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_EventInfo)(THIS_ long reservedPass0, BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Active)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_DeferRecalc)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_DeferRecalc)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_AlertResponse)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_AlertResponse)(THIS_ short Response) PURE;
    STDMETHOD(get_ShowProgress)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowProgress)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_Vbe)(THIS_ IDispatch * FAR* lpdispRet) PURE;
    STDMETHOD(get_ShowMenus)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowMenus)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_ToolbarStyle)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ToolbarStyle)(THIS_ short fWhichToolbars) PURE;
    STDMETHOD(get_ShowStatusBar)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowStatusBar)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_EventsEnabled)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_EventsEnabled)(THIS_ short OnOrOff) PURE;
    STDMETHOD(FormatResult)(THIS_ VARIANT StringOrNumber, VARIANT UnitsIn, VARIANT UnitsOut, BSTR Format, BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(ConvertResult)(THIS_ VARIANT StringOrNumber, VARIANT UnitsIn, VARIANT UnitsOut, double FAR* lpr8Ret) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(EnumDirectories)(THIS_ BSTR PathsString, SAFEARRAY FAR* FAR* NameArray) PURE;
    STDMETHOD(get_TraceFlags)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(put_TraceFlags)(THIS_ long flags) PURE;
    STDMETHOD(PurgeUndo)(THIS) PURE;
    STDMETHOD(QueueMarkerEvent)(THIS_ BSTR ContextString, long FAR* lpi4Ret) PURE;
    STDMETHOD(get_ShowToolbar)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowToolbar)(THIS_ short OnOrOff) PURE;
};

DEFINE_GUID(IID_IVCell,0x000D0701L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVCell */
#undef INTERFACE
#define INTERFACE IVCell

DECLARE_INTERFACE_(IVCell, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVCell methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Error)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Formula)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Formula)(THIS_ BSTR Formula) PURE;
    STDMETHOD(put_FormulaForce)(THIS_ BSTR Formula) PURE;
    STDMETHOD(GlueTo)(THIS_ IVCell FAR* CellObject) PURE;
    STDMETHOD(GlueToPos)(THIS_ IVShape FAR* SheetObject, double xPercent, double yPercent) PURE;
    STDMETHOD(get_Result)(THIS_ VARIANT UnitsNameOrCode, double FAR* lpr8Ret) PURE;
    STDMETHOD(put_Result)(THIS_ VARIANT UnitsNameOrCode, double Value) PURE;
    STDMETHOD(put_ResultForce)(THIS_ VARIANT UnitsNameOrCode, double Value) PURE;
    STDMETHOD(get_ResultIU)(THIS_ double FAR* lpr8Ret) PURE;
    STDMETHOD(put_ResultIU)(THIS_ double Value) PURE;
    STDMETHOD(put_ResultIUForce)(THIS_ double Value) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Units)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_LocalName)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_RowName)(THIS_ BSTR RowName) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Shape)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Style)(THIS_ IVStyle FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Section)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Row)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Column)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_IsConstant)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_IsInherited)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ResultInt)(THIS_ VARIANT UnitsNameOrCode, short fRound, long FAR* lpi4Ret) PURE;
    STDMETHOD(put_ResultFromInt)(THIS_ VARIANT UnitsNameOrCode, long Value) PURE;
    STDMETHOD(put_ResultFromIntForce)(THIS_ VARIANT UnitsNameOrCode, long Value) PURE;
    STDMETHOD(get_ResultStr)(THIS_ VARIANT UnitsNameOrCode, BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(Trigger)(THIS) PURE;
    STDMETHOD(get_RowName)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
};

DEFINE_GUID(IID_IVCharacters,0x000D0702L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVCharacters */
#undef INTERFACE
#define INTERFACE IVCharacters

DECLARE_INTERFACE_(IVCharacters, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVCharacters methods */
    STDMETHOD(AddCustomField)(THIS_ BSTR Formula, short Format) PURE;
    STDMETHOD(AddField)(THIS_ short Category, short Code, short Format) PURE;
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Begin)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(put_Begin)(THIS_ long IPIndex) PURE;
    STDMETHOD(get_CharCount)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(put_CharProps)(THIS_ short CellIndex, short Value) PURE;
    STDMETHOD(get_CharPropsRow)(THIS_ short BiasLorR, short FAR* lpi2Ret) PURE;
    STDMETHOD(Copy)(THIS) PURE;
    STDMETHOD(Cut)(THIS) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_End)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(put_End)(THIS_ long IPIndex) PURE;
    STDMETHOD(get_FieldCategory)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_FieldCode)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_FieldFormat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_FieldFormula)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_IsField)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ParaProps)(THIS_ short CellIndex, short Value) PURE;
    STDMETHOD(get_ParaPropsRow)(THIS_ short BiasLorR, short FAR* lpi2Ret) PURE;
    STDMETHOD(Paste)(THIS) PURE;
    STDMETHOD(get_TabPropsRow)(THIS_ short BiasLorR, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_RunBegin)(THIS_ short RunType, long FAR* lpi4Ret) PURE;
    STDMETHOD(get_RunEnd)(THIS_ short RunType, long FAR* lpi4Ret) PURE;
    STDMETHOD(get_Shape)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_TextAsString)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Text)(THIS_ VARIANT StrCharsOrSheet) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(get_Text)(THIS_ VARIANT FAR* lpvarRet) PURE;
};

DEFINE_GUID(IID_IVConnect,0x000D0703L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVConnect */
#undef INTERFACE
#define INTERFACE IVConnect

DECLARE_INTERFACE_(IVConnect, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVConnect methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_FromSheet)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ToSheet)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_FromCell)(THIS_ IVCell FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ToCell)(THIS_ IVCell FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_FromPart)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ToPart)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
};

DEFINE_GUID(IID_IVConnects,0x000D0704L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVConnects */
#undef INTERFACE
#define INTERFACE IVConnects

DECLARE_INTERFACE_(IVConnects, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVConnects methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Item)(THIS_ short Index, IVConnect FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_FromSheet)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ToSheet)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
};

DEFINE_GUID(IID_IVDocument,0x000D0705L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVDocument */
#undef INTERFACE
#define INTERFACE IVDocument

DECLARE_INTERFACE_(IVDocument, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVDocument methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_InPlace)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Masters)(THIS_ IVMasters FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Pages)(THIS_ IVPages FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Styles)(THIS_ IVStyles FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_FullName)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(Drop)(THIS_ IUnknown * ObjectToDrop, short xPos, short yPos, IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Saved)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Saved)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_ReadOnly)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Save)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(SaveAs)(THIS_ BSTR FileName, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Version)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(put_Version)(THIS_ long Version) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_Subject)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Subject)(THIS_ BSTR Subject) PURE;
    STDMETHOD(get_Creator)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Creator)(THIS_ BSTR Creator) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR Keywords) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(Print)(THIS) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_CustomMenus)(THIS_ IVUIObject FAR* FAR* lpdispRet) PURE;
    STDMETHOD(SetCustomMenus)(THIS_ IVUIObject FAR* MenusObject) PURE;
    STDMETHOD(get_CustomMenusFile)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_CustomMenusFile)(THIS_ BSTR FileName) PURE;
    STDMETHOD(ClearCustomMenus)(THIS) PURE;
    STDMETHOD(get_CustomToolbars)(THIS_ IVUIObject FAR* FAR* lpdispRet) PURE;
    STDMETHOD(SetCustomToolbars)(THIS_ IVUIObject FAR* ToolbarsObject) PURE;
    STDMETHOD(get_CustomToolbarsFile)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_CustomToolbarsFile)(THIS_ BSTR FileName) PURE;
    STDMETHOD(ClearCustomToolbars)(THIS) PURE;
    STDMETHOD(get_Fonts)(THIS_ IVFonts FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Colors)(THIS_ IVColors FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Template)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(SaveAsEx)(THIS_ BSTR FileName, short SaveFlags) PURE;
    STDMETHOD(get_SavePreviewMode)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_SavePreviewMode)(THIS_ short OnOrOff) PURE;
    STDMETHOD(GetIcon)(THIS_ short ID, BSTR FileName) PURE;
    STDMETHOD(SetIcon)(THIS_ short ID, short Index, BSTR FileName) PURE;
    STDMETHOD(get_LeftMargin)(THIS_ VARIANT UnitsNameOrCode, double FAR* lpr8Ret) PURE;
    STDMETHOD(put_LeftMargin)(THIS_ VARIANT UnitsNameOrCode, double Value) PURE;
    STDMETHOD(get_RightMargin)(THIS_ VARIANT UnitsNameOrCode, double FAR* lpr8Ret) PURE;
    STDMETHOD(put_RightMargin)(THIS_ VARIANT UnitsNameOrCode, double Value) PURE;
    STDMETHOD(get_TopMargin)(THIS_ VARIANT UnitsNameOrCode, double FAR* lpr8Ret) PURE;
    STDMETHOD(put_TopMargin)(THIS_ VARIANT UnitsNameOrCode, double Value) PURE;
    STDMETHOD(get_BottomMargin)(THIS_ VARIANT UnitsNameOrCode, double FAR* lpr8Ret) PURE;
    STDMETHOD(put_BottomMargin)(THIS_ VARIANT UnitsNameOrCode, double Value) PURE;
    STDMETHOD(get_PrintLandscape)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_PrintLandscape)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_PrintCenteredH)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_PrintCenteredH)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_PrintCenteredV)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_PrintCenteredV)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_PrintScale)(THIS_ double FAR* lpr8Ret) PURE;
    STDMETHOD(put_PrintScale)(THIS_ double Scale) PURE;
    STDMETHOD(get_PrintFitOnPages)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_PrintFitOnPages)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_PrintPagesAcross)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_PrintPagesAcross)(THIS_ short PageCount) PURE;
    STDMETHOD(get_PrintPagesDown)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_PrintPagesDown)(THIS_ short PageCount) PURE;
    STDMETHOD(get_DefaultStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_DefaultStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_DefaultLineStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_DefaultLineStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_DefaultFillStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_DefaultFillStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_DefaultTextStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_DefaultTextStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(OpenStencilWindow)(THIS_ IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(ParseLine)(THIS_ BSTR Line) PURE;
    STDMETHOD(ExecuteLine)(THIS_ BSTR Line) PURE;
    STDMETHOD(get_VBProject)(THIS_ IDispatch * FAR* lpdispRet) PURE;
    STDMETHOD(get_PaperWidth)(THIS_ VARIANT UnitsNameOrCode, double FAR* lpr8Ret) PURE;
    STDMETHOD(get_PaperHeight)(THIS_ VARIANT UnitsNameOrCode, double FAR* lpr8Ret) PURE;
    STDMETHOD(get_PaperSize)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_PaperSize)(THIS_ short SizeCode) PURE;
    STDMETHOD(FollowHyperlink45)(THIS_ BSTR Target, BSTR Location) PURE;
    STDMETHOD(get_CodeName)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_Mode)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Mode)(THIS_ short Mode) PURE;
    STDMETHOD(get_OLEObjects)(THIS_ IVOLEObjects FAR* FAR* lpdispRet) PURE;
    STDMETHOD(FollowHyperlink)(THIS_ BSTR Address, BSTR SubAddress, VARIANT ExtraInfo, VARIANT Frame, VARIANT NewWindow, VARIANT res1, VARIANT res2, VARIANT res3) PURE;
    STDMETHOD(get_Manager)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Manager)(THIS_ BSTR Manager) PURE;
    STDMETHOD(get_Company)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Company)(THIS_ BSTR Company) PURE;
    STDMETHOD(get_Category)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Category)(THIS_ BSTR Category) PURE;
    STDMETHOD(get_HyperlinkBase)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_HyperlinkBase)(THIS_ BSTR HyperlinkBase) PURE;
};

DEFINE_GUID(IID_IVDocuments,0x000D0706L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVDocuments */
#undef INTERFACE
#define INTERFACE IVDocuments

DECLARE_INTERFACE_(IVDocuments, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVDocuments methods */
    STDMETHOD(Add)(THIS_ BSTR FileName, IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Open)(THIS_ BSTR FileName, IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT NameOrIndex, IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(OpenEx)(THIS_ BSTR FileName, short Flags, IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(GetNames)(THIS_ SAFEARRAY FAR* FAR* NameArray) PURE;
};

DEFINE_GUID(IID_IVMaster,0x000D0707L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVMaster */
#undef INTERFACE
#define INTERFACE IVMaster

DECLARE_INTERFACE_(IVMaster, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVMaster methods */
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Prompt)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Prompt)(THIS_ BSTR PromptString) PURE;
    STDMETHOD(get_AlignName)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_AlignName)(THIS_ short fMasAlignName) PURE;
    STDMETHOD(get_IconSize)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_IconSize)(THIS_ short fMasIconSize) PURE;
    STDMETHOD(get_IconUpdate)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_IconUpdate)(THIS_ short fMasIconUpdate) PURE;
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR MasterName) PURE;
    STDMETHOD(get_Shapes)(THIS_ IVShapes FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_OneD)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_UniqueID)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_Layers)(THIS_ IVLayers FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PageSheet)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Drop)(THIS_ IUnknown * ObjectToDrop, double xPos, double yPos, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(CenterDrawing)(THIS) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(DrawLine)(THIS_ double xLeft, double yTop, double xRight, double yBottom, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawRectangle)(THIS_ double xLeft, double yTop, double xRight, double yBottom, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawOval)(THIS_ double xLeft, double yTop, double xRight, double yBottom, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawSpline)(THIS_ SAFEARRAY FAR* FAR* xyArray, double Tolerance, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawBezier)(THIS_ SAFEARRAY FAR* FAR* xyArray, short degree, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawPolyline)(THIS_ SAFEARRAY FAR* FAR* xyArray, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Import)(THIS_ BSTR FileName, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Export)(THIS_ BSTR FileName) PURE;
    STDMETHOD(InsertFromFile)(THIS_ BSTR FileName, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(InsertObject)(THIS_ BSTR ClassOrProgID, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(OpenDrawWindow)(THIS_ IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(OpenIconWindow)(THIS_ IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Open)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(DropMany)(THIS_ SAFEARRAY FAR* FAR* ObjectsToInstance, SAFEARRAY FAR* FAR* xyArray, SAFEARRAY FAR* FAR* IDArray, short FAR* lpi2Ret) PURE;
    STDMETHOD(GetFormulas)(THIS_ SAFEARRAY FAR* FAR* SID_SRCStream, SAFEARRAY FAR* FAR* formulaArray) PURE;
    STDMETHOD(GetResults)(THIS_ SAFEARRAY FAR* FAR* SID_SRCStream, short Flags, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray) PURE;
    STDMETHOD(SetFormulas)(THIS_ SAFEARRAY FAR* FAR* SID_SRCStream, SAFEARRAY FAR* FAR* formulaArray, short Flags, short FAR* lpi2Ret) PURE;
    STDMETHOD(SetResults)(THIS_ SAFEARRAY FAR* FAR* SID_SRCStream, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray, short Flags, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Connects)(THIS_ IVConnects FAR* FAR* lpdispRet) PURE;
    STDMETHOD(ImportIcon)(THIS_ BSTR FileName) PURE;
    STDMETHOD(ExportIcon)(THIS_ BSTR FileName, short Flags) PURE;
    STDMETHOD(Layout)(THIS) PURE;
    STDMETHOD(BoundingBox)(THIS_ short Flags, double FAR* lpr8Left, double FAR* lpr8Bottom, double FAR* lpr8Right, double FAR* lpr8Top) PURE;
    STDMETHOD(get_ID)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_OLEObjects)(THIS_ IVOLEObjects FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PatternFlags)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_PatternFlags)(THIS_ short Flags) PURE;
    STDMETHOD(get_MatchByName)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_MatchByName)(THIS_ short fMasMatchByName) PURE;
};

DEFINE_GUID(IID_IVMasters,0x000D0708L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVMasters */
#undef INTERFACE
#define INTERFACE IVMasters

DECLARE_INTERFACE_(IVMasters, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVMasters methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT NameUIDOrIndex, IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(Add)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(GetNames)(THIS_ SAFEARRAY FAR* FAR* NameArray) PURE;
};

DEFINE_GUID(IID_IVPage,0x000D0709L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVPage */
#undef INTERFACE
#define INTERFACE IVPage

DECLARE_INTERFACE_(IVPage, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVPage methods */
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Background)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Background)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(Paste)(THIS) PURE;
    STDMETHOD(PasteSpecial)(THIS_ short Format) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(DrawLine)(THIS_ double xLeft, double yTop, double xRight, double yBottom, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawRectangle)(THIS_ double xLeft, double yTop, double xRight, double yBottom, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawOval)(THIS_ double xLeft, double yTop, double xRight, double yBottom, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR PageName) PURE;
    STDMETHOD(get_Shapes)(THIS_ IVShapes FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Drop)(THIS_ IUnknown * ObjectToDrop, double xPos, double yPos, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(AddGuide)(THIS_ short Type, double xPos, double yPos, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_BackPageAsObj)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(put_BackPageFromName)(THIS_ BSTR PageName) PURE;
    STDMETHOD(Print)(THIS) PURE;
    STDMETHOD(Import)(THIS_ BSTR FileName, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Export)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_Layers)(THIS_ IVLayers FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PageSheet)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Delete)(THIS_ short fRenumberPages) PURE;
    STDMETHOD(CenterDrawing)(THIS) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(DrawSpline)(THIS_ SAFEARRAY FAR* FAR* xyArray, double Tolerance, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawBezier)(THIS_ SAFEARRAY FAR* FAR* xyArray, short degree, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawPolyline)(THIS_ SAFEARRAY FAR* FAR* xyArray, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(InsertFromFile)(THIS_ BSTR FileName, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(InsertObject)(THIS_ BSTR ClassOrProgID, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(OpenDrawWindow)(THIS_ IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DropMany)(THIS_ SAFEARRAY FAR* FAR* ObjectsToInstance, SAFEARRAY FAR* FAR* xyArray, SAFEARRAY FAR* FAR* IDArray, short FAR* lpi2Ret) PURE;
    STDMETHOD(GetFormulas)(THIS_ SAFEARRAY FAR* FAR* SID_SRCStream, SAFEARRAY FAR* FAR* formulaArray) PURE;
    STDMETHOD(GetResults)(THIS_ SAFEARRAY FAR* FAR* SID_SRCStream, short Flags, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray) PURE;
    STDMETHOD(SetFormulas)(THIS_ SAFEARRAY FAR* FAR* SID_SRCStream, SAFEARRAY FAR* FAR* formulaArray, short Flags, short FAR* lpi2Ret) PURE;
    STDMETHOD(SetResults)(THIS_ SAFEARRAY FAR* FAR* SID_SRCStream, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray, short Flags, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Connects)(THIS_ IVConnects FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_BackPage)(THIS_ VARIANT FAR* lpobjRet) PURE;
    STDMETHOD(put_BackPage)(THIS_ VARIANT PageName) PURE;
    STDMETHOD(Layout)(THIS) PURE;
    STDMETHOD(BoundingBox)(THIS_ short Flags, double FAR* lpr8Left, double FAR* lpr8Bottom, double FAR* lpr8Right, double FAR* lpr8Top) PURE;
    STDMETHOD(get_ID)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_OLEObjects)(THIS_ IVOLEObjects FAR* FAR* lpdispRet) PURE;
};

DEFINE_GUID(IID_IVPages,0x000D070AL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVPages */
#undef INTERFACE
#define INTERFACE IVPages

DECLARE_INTERFACE_(IVPages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVPages methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT NameOrIndex, IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Add)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(GetNames)(THIS_ SAFEARRAY FAR* FAR* NameArray) PURE;
};

DEFINE_GUID(IID_IVSelection,0x000D070BL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVSelection */
#undef INTERFACE
#define INTERFACE IVSelection

DECLARE_INTERFACE_(IVSelection, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVSelection methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ short Index, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Export)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingPage)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingMaster)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingShape)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(BringForward)(THIS) PURE;
    STDMETHOD(BringToFront)(THIS) PURE;
    STDMETHOD(SendBackward)(THIS) PURE;
    STDMETHOD(SendToBack)(THIS) PURE;
    STDMETHOD(get_Style)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Style)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_StyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_LineStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_LineStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_LineStyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_FillStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_FillStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_FillStyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_TextStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_TextStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_TextStyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(Combine)(THIS) PURE;
    STDMETHOD(Fragment)(THIS) PURE;
    STDMETHOD(Intersect)(THIS) PURE;
    STDMETHOD(Subtract)(THIS) PURE;
    STDMETHOD(Union)(THIS) PURE;
    STDMETHOD(FlipHorizontal)(THIS) PURE;
    STDMETHOD(FlipVertical)(THIS) PURE;
    STDMETHOD(ReverseEnds)(THIS) PURE;
    STDMETHOD(Rotate90)(THIS) PURE;
    STDMETHOD(Copy)(THIS) PURE;
    STDMETHOD(Cut)(THIS) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(Duplicate)(THIS) PURE;
    STDMETHOD(Group)(THIS) PURE;
    STDMETHOD(ConvertToGroup)(THIS) PURE;
    STDMETHOD(Ungroup)(THIS) PURE;
    STDMETHOD(SelectAll)(THIS) PURE;
    STDMETHOD(DeselectAll)(THIS) PURE;
    STDMETHOD(Select)(THIS_ IVShape FAR* SheetObject, short SelectAction) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(Trim)(THIS) PURE;
    STDMETHOD(Join)(THIS) PURE;
    STDMETHOD(FitCurve)(THIS_ double Tolerance, short Flags) PURE;
    STDMETHOD(Layout)(THIS) PURE;
    STDMETHOD(BoundingBox)(THIS_ short Flags, double FAR* lpr8Left, double FAR* lpr8Bottom, double FAR* lpr8Right, double FAR* lpr8Top) PURE;
};

DEFINE_GUID(IID_IVShape,0x000D070CL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVShape */
#undef INTERFACE
#define INTERFACE IVShape

DECLARE_INTERFACE_(IVShape, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVShape methods */
    STDMETHOD(Group)(THIS) PURE;
    STDMETHOD(BringForward)(THIS) PURE;
    STDMETHOD(BringToFront)(THIS) PURE;
    STDMETHOD(ConvertToGroup)(THIS) PURE;
    STDMETHOD(FlipHorizontal)(THIS) PURE;
    STDMETHOD(FlipVertical)(THIS) PURE;
    STDMETHOD(ReverseEnds)(THIS) PURE;
    STDMETHOD(SendBackward)(THIS) PURE;
    STDMETHOD(SendToBack)(THIS) PURE;
    STDMETHOD(Rotate90)(THIS) PURE;
    STDMETHOD(Ungroup)(THIS) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Parent)(THIS_ IDispatch * FAR* lpdispRet) PURE;
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Master)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Type)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Cells)(THIS_ BSTR CellName, IVCell FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_CellsSRC)(THIS_ short Section, short Row, short Column, IVCell FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Shapes)(THIS_ IVShapes FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Data1)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Data1)(THIS_ BSTR String) PURE;
    STDMETHOD(get_Data2)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Data2)(THIS_ BSTR String) PURE;
    STDMETHOD(get_Data3)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Data3)(THIS_ BSTR String) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR String) PURE;
    STDMETHOD(get_NameID)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR SheetName) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR String) PURE;
    STDMETHOD(get_CharCount)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(get_Characters)(THIS_ IVCharacters FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Copy)(THIS) PURE;
    STDMETHOD(Cut)(THIS) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(Duplicate)(THIS) PURE;
    STDMETHOD(Drop)(THIS_ IUnknown * ObjectToDrop, double xPos, double yPos, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_OneD)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_OneD)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_GeometryCount)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_RowCount)(THIS_ short Section, short FAR* lpi2Ret) PURE;
    STDMETHOD(AddSection)(THIS_ short Section, short FAR* lpi2Ret) PURE;
    STDMETHOD(DeleteSection)(THIS_ short Section) PURE;
    STDMETHOD(AddRow)(THIS_ short Section, short Row, short RowTag, short FAR* lpi2Ret) PURE;
    STDMETHOD(DeleteRow)(THIS_ short Section, short Row) PURE;
    STDMETHOD(get_RowsCellCount)(THIS_ short Section, short Row, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_RowType)(THIS_ short Section, short Row, short FAR* lpi2Ret) PURE;
    STDMETHOD(put_RowType)(THIS_ short Section, short Row, short RowTag) PURE;
    STDMETHOD(SetCenter)(THIS_ double xPos, double yPos) PURE;
    STDMETHOD(SetBegin)(THIS_ double xPos, double yPos) PURE;
    STDMETHOD(SetEnd)(THIS_ double xPos, double yPos) PURE;
    STDMETHOD(get_Connects)(THIS_ IVConnects FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Style)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Style)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_StyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_LineStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_LineStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_LineStyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_FillStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_FillStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_FillStyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_TextStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_TextStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_TextStyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(Export)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_AreaIU)(THIS_ double FAR* lpr8Ret) PURE;
    STDMETHOD(get_LengthIU)(THIS_ double FAR* lpr8Ret) PURE;
    STDMETHOD(get_GeomExIf)(THIS_ short fFill, double LineRes, IUnknown * FAR* lpunkRet) PURE;
    STDMETHOD(get_UniqueID)(THIS_ short fUniqueID, BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_ContainingPage)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingMaster)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingShape)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_SectionExists)(THIS_ short Section, short fLocalExists, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_RowExists)(THIS_ short Section, short Row, short fLocalExists, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_CellExists)(THIS_ BSTR CellName, short fLocalExists, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_CellsSRCExists)(THIS_ short Section, short Row, short Column, short fLocalExists, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_LayerCount)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Layer)(THIS_ short Index, IVLayer FAR* FAR* lpdispRet) PURE;
    STDMETHOD(AddNamedRow)(THIS_ short Section, BSTR RowName, short RowTag, short FAR* lpi2Ret) PURE;
    STDMETHOD(AddRows)(THIS_ short Section, short Row, short RowTag, short RowCount, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(DrawLine)(THIS_ double xLeft, double yTop, double xRight, double yBottom, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawRectangle)(THIS_ double xLeft, double yTop, double xRight, double yBottom, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawOval)(THIS_ double xLeft, double yTop, double xRight, double yBottom, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawSpline)(THIS_ SAFEARRAY FAR* FAR* xyArray, double Tolerance, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawBezier)(THIS_ SAFEARRAY FAR* FAR* xyArray, short degree, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(DrawPolyline)(THIS_ SAFEARRAY FAR* FAR* xyArray, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(FitCurve)(THIS_ double Tolerance, short Flags) PURE;
    STDMETHOD(Import)(THIS_ BSTR FileName, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(CenterDrawing)(THIS) PURE;
    STDMETHOD(InsertFromFile)(THIS_ BSTR FileName, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(InsertObject)(THIS_ BSTR ClassOrProgID, short Flags, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ClassID)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_ForeignType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Object)(THIS_ IDispatch * FAR* lpdispRet) PURE;
    STDMETHOD(OpenDrawWindow)(THIS_ IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(OpenSheetWindow)(THIS_ IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ID)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(DropMany)(THIS_ SAFEARRAY FAR* FAR* ObjectsToInstance, SAFEARRAY FAR* FAR* xyArray, SAFEARRAY FAR* FAR* IDArray, short FAR* lpi2Ret) PURE;
    STDMETHOD(GetFormulas)(THIS_ SAFEARRAY FAR* FAR* SRCStream, SAFEARRAY FAR* FAR* formulaArray) PURE;
    STDMETHOD(GetResults)(THIS_ SAFEARRAY FAR* FAR* SRCStream, short Flags, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray) PURE;
    STDMETHOD(SetFormulas)(THIS_ SAFEARRAY FAR* FAR* SRCStream, SAFEARRAY FAR* FAR* formulaArray, short Flags, short FAR* lpi2Ret) PURE;
    STDMETHOD(SetResults)(THIS_ SAFEARRAY FAR* FAR* SRCStream, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray, short Flags, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_FromConnects)(THIS_ IVConnects FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Layout)(THIS) PURE;
    STDMETHOD(BoundingBox)(THIS_ short Flags, double FAR* lpr8Left, double FAR* lpr8Bottom, double FAR* lpr8Right, double FAR* lpr8Top) PURE;
    STDMETHOD(HitTest)(THIS_ double xPos, double yPos, double Tolerance, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Hyperlink)(THIS_ IVHyperlink FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ProgID)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_ObjectIsInherited)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(get_Paths)(THIS_ IVPaths FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PathsLocal)(THIS_ IVPaths FAR* FAR* lpdispRet) PURE;
    STDMETHOD(AddHyperlink)(THIS_ IVHyperlink FAR* FAR* lpdispRet) PURE;
};

DEFINE_GUID(IID_IVShapes,0x000D070DL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVShapes */
#undef INTERFACE
#define INTERFACE IVShapes

DECLARE_INTERFACE_(IVShapes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVShapes methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT NameUIDOrIndex, IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingPage)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingMaster)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingShape)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(CenterDrawing)(THIS) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(get_ItemFromID)(THIS_ short ObjectID, IVShape FAR* FAR* lpdispRet) PURE;
};

DEFINE_GUID(IID_IVStyle,0x000D070EL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVStyle */
#undef INTERFACE
#define INTERFACE IVStyle

DECLARE_INTERFACE_(IVStyle, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVStyle methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_BasedOn)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_BasedOn)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_TextBasedOn)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_TextBasedOn)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_LineBasedOn)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_LineBasedOn)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_FillBasedOn)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_FillBasedOn)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_IncludesText)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_IncludesText)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_IncludesLine)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_IncludesLine)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_IncludesFill)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_IncludesFill)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_Cells)(THIS_ BSTR CellName, IVCell FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(get_ID)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(GetFormulas)(THIS_ SAFEARRAY FAR* FAR* SRCStream, SAFEARRAY FAR* FAR* formulaArray) PURE;
    STDMETHOD(GetResults)(THIS_ SAFEARRAY FAR* FAR* SRCStream, short Flags, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray) PURE;
    STDMETHOD(SetFormulas)(THIS_ SAFEARRAY FAR* FAR* SRCStream, SAFEARRAY FAR* FAR* formulaArray, short Flags, short FAR* lpi2Ret) PURE;
    STDMETHOD(SetResults)(THIS_ SAFEARRAY FAR* FAR* SRCStream, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray, short Flags, short FAR* lpi2Ret) PURE;
};

DEFINE_GUID(IID_IVStyles,0x000D070FL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVStyles */
#undef INTERFACE
#define INTERFACE IVStyles

DECLARE_INTERFACE_(IVStyles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVStyles methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT NameOrIndex, IVStyle FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Add)(THIS_ BSTR StyleName, BSTR BasedOn, short fIncludesText, short fIncludesLine, short fIncludesFill, IVStyle FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(get_ItemFromID)(THIS_ short ObjectID, IVStyle FAR* FAR* lpdispRet) PURE;
    STDMETHOD(GetNames)(THIS_ SAFEARRAY FAR* FAR* NameArray) PURE;
};

DEFINE_GUID(IID_IVWindow,0x000D0710L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVWindow */
#undef INTERFACE
#define INTERFACE IVWindow

DECLARE_INTERFACE_(IVWindow, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVWindow methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Activate)(THIS) PURE;
    STDMETHOD(get_Type)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PageAsObj)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(put_PageFromName)(THIS_ BSTR PageName) PURE;
    STDMETHOD(get_Zoom)(THIS_ double FAR* lpr8Ret) PURE;
    STDMETHOD(put_Zoom)(THIS_ double Zoom) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(SelectAll)(THIS) PURE;
    STDMETHOD(DeselectAll)(THIS) PURE;
    STDMETHOD(get_Selection)(THIS_ IVSelection FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Select)(THIS_ IVShape FAR* SheetObject, short SelectAction) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Cut)(THIS) PURE;
    STDMETHOD(Copy)(THIS) PURE;
    STDMETHOD(Paste)(THIS) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(Duplicate)(THIS) PURE;
    STDMETHOD(Group)(THIS) PURE;
    STDMETHOD(Union)(THIS) PURE;
    STDMETHOD(Combine)(THIS) PURE;
    STDMETHOD(Fragment)(THIS) PURE;
    STDMETHOD(AddToGroup)(THIS) PURE;
    STDMETHOD(RemoveFromGroup)(THIS) PURE;
    STDMETHOD(get_SubType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Intersect)(THIS) PURE;
    STDMETHOD(Subtract)(THIS) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(get_WindowHandle)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_WindowHandle32)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(Trim)(THIS) PURE;
    STDMETHOD(Join)(THIS) PURE;
    STDMETHOD(get_ShowRulers)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowRulers)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_ShowGrid)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowGrid)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_ShowGuides)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowGuides)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_ShowConnectPoints)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowConnectPoints)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_ShowPageBreaks)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowPageBreaks)(THIS_ short OnOrOff) PURE;
    STDMETHOD(get_Page)(THIS_ VARIANT FAR* lpobjRet) PURE;
    STDMETHOD(put_Page)(THIS_ VARIANT PageName) PURE;
    STDMETHOD(DockedStencils)(THIS_ SAFEARRAY FAR* FAR* NameArray) PURE;
    STDMETHOD(get_Master)(THIS_ VARIANT FAR* lpobjRet) PURE;
    STDMETHOD(get_ShowScrollBars)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_ShowScrollBars)(THIS_ short OnOrOff) PURE;
};

DEFINE_GUID(IID_IVWindows,0x000D0711L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVWindows */
#undef INTERFACE
#define INTERFACE IVWindows

DECLARE_INTERFACE_(IVWindows, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVWindows methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ short Index, IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Arrange)(THIS) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
};

DEFINE_GUID(IID_IVLayer,0x000D0712L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVLayer */
#undef INTERFACE
#define INTERFACE IVLayer

DECLARE_INTERFACE_(IVLayer, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVLayer methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Page)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Master)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Row)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Add)(THIS_ IVShape FAR* SheetObject, short fPresMems) PURE;
    STDMETHOD(Remove)(THIS_ IVShape FAR* SheetObject, short fPresMems) PURE;
    STDMETHOD(Delete)(THIS_ short fDeleteShapes) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR LayerName) PURE;
    STDMETHOD(get_CellsC)(THIS_ short Column, IVCell FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
};

DEFINE_GUID(IID_IVLayers,0x000D0713L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVLayers */
#undef INTERFACE
#define INTERFACE IVLayers

DECLARE_INTERFACE_(IVLayers, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVLayers methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Page)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Master)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT NameOrIndex, IVLayer FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Add)(THIS_ BSTR LayerName, IVLayer FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
};

DEFINE_GUID(IID_IVFont,0x000D0714L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVFont */
#undef INTERFACE
#define INTERFACE IVFont

DECLARE_INTERFACE_(IVFont, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVFont methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_ID)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Attributes)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_CharSet)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_PitchAndFamily)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
};

DEFINE_GUID(IID_IVFonts,0x000D0715L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVFonts */
#undef INTERFACE
#define INTERFACE IVFonts

DECLARE_INTERFACE_(IVFonts, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVFonts methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT NameOrIndex, IVFont FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ItemFromID)(THIS_ long ObjectID, IVFont FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
};

DEFINE_GUID(IID_IVColor,0x000D0716L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVColor */
#undef INTERFACE
#define INTERFACE IVColor

DECLARE_INTERFACE_(IVColor, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVColor methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Red)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Red)(THIS_ short RGBVal) PURE;
    STDMETHOD(get_Green)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Green)(THIS_ short RGBVal) PURE;
    STDMETHOD(get_Blue)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Blue)(THIS_ short RGBVal) PURE;
    STDMETHOD(get_Flags)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Flags)(THIS_ short fColorFlags) PURE;
    STDMETHOD(get_PaletteEntry)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(put_PaletteEntry)(THIS_ long ColPalEntry) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
};

DEFINE_GUID(IID_IVColors,0x000D0717L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVColors */
#undef INTERFACE
#define INTERFACE IVColors

DECLARE_INTERFACE_(IVColors, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVColors methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ short Index, IVColor FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
};

DEFINE_GUID(IID_IVAddon,0x000D0718L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVAddon */
#undef INTERFACE
#define INTERFACE IVAddon

DECLARE_INTERFACE_(IVAddon, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVAddon methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Enabled)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Run)(THIS_ BSTR ArgString) PURE;
};

DEFINE_GUID(IID_IVAddons,0x000D0719L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVAddons */
#undef INTERFACE
#define INTERFACE IVAddons

DECLARE_INTERFACE_(IVAddons, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVAddons methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT NameOrIndex, IVAddon FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Add)(THIS_ BSTR FileName, IVAddon FAR* FAR* lpdispRet) PURE;
    STDMETHOD(GetNames)(THIS_ SAFEARRAY FAR* FAR* NameArray) PURE;
};

DEFINE_GUID(IID_IVEvent,0x000D071AL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVEvent */
#undef INTERFACE
#define INTERFACE IVEvent

DECLARE_INTERFACE_(IVEvent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVEvent methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Index)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Event)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Event)(THIS_ short Event) PURE;
    STDMETHOD(get_Action)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Action)(THIS_ short Action) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_TargetArgs)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_TargetArgs)(THIS_ BSTR TargetArgs) PURE;
    STDMETHOD(Trigger)(THIS_ BSTR ContextString) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ID)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(get_Enabled)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Enabled)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_Persistable)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Persistent)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_Persistent)(THIS_ short OnOrOff) PURE;
};

DEFINE_GUID(IID_IVEventList,0x000D071BL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVEventList */
#undef INTERFACE
#define INTERFACE IVEventList

DECLARE_INTERFACE_(IVEventList, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVEventList methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ short Index, IVEvent FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Add)(THIS_ short EventCode, short Action, BSTR Target, BSTR TargetArgs, IVEvent FAR* FAR* lpdispRet) PURE;
    STDMETHOD(AddAdvise)(THIS_ short EventCode, VARIANT SinkIUnkOrIDisp, BSTR IIDSink, BSTR TargetArgs, IVEvent FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ItemFromID)(THIS_ long ObjectID, IVEvent FAR* FAR* lpdispRet) PURE;
};

DEFINE_GUID(IID_IVGlobal,0x000D071CL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVGlobal */
#undef INTERFACE
#define INTERFACE IVGlobal

DECLARE_INTERFACE_(IVGlobal, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVGlobal methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ActiveDocument)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ActivePage)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ActiveWindow)(THIS_ IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Documents)(THIS_ IVDocuments FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Windows)(THIS_ IVWindows FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Addons)(THIS_ IVAddons FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Vbe)(THIS_ IDispatch * FAR* lpdispRet) PURE;
};

DEFINE_GUID(DIID_EDocument,0x000D0750L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EDocument */
#undef INTERFACE
#define INTERFACE EDocument

DECLARE_INTERFACE_(EDocument, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EDocument methods:
    void DocumentOpened(IVDocument FAR* doc);
    void DocumentCreated(IVDocument FAR* doc);
    void DocumentSaved(IVDocument FAR* doc);
    void DocumentSavedAs(IVDocument FAR* doc);
    void DocumentChanged(IVDocument FAR* doc);
    void BeforeDocumentClose(IVDocument FAR* doc);
    void StyleAdded(IVStyle FAR* style);
    void StyleChanged(IVStyle FAR* style);
    void BeforeStyleDelete(IVStyle FAR* style);
    void MasterAdded(IVMaster FAR* master);
    void MasterChanged(IVMaster FAR* master);
    void BeforeMasterDelete(IVMaster FAR* master);
    void PageAdded(IVPage FAR* page);
    void PageChanged(IVPage FAR* page);
    void BeforePageDelete(IVPage FAR* page);
    void ShapeAdded(IVShape FAR* shape);
    void BeforeSelectionDelete(IVSelection FAR* selection);
    void RunModeEntered(IVDocument FAR* doc);
    void DesignModeEntered(IVDocument FAR* doc);
    void BeforeDocumentSave(IVDocument FAR* doc);
    void BeforeDocumentSaveAs(IVDocument FAR* doc);
    */
};

DEFINE_GUID(DIID_EApplication,0x000D0B00L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EApplication */
#undef INTERFACE
#define INTERFACE EApplication

DECLARE_INTERFACE_(EApplication, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EApplication methods:
    void AppActivated(IVApplication FAR* app);
    void AppDeactivated(IVApplication FAR* app);
    void AppObjActivated(IVApplication FAR* app);
    void AppObjDeactivated(IVApplication FAR* app);
    void BeforeQuit(IVApplication FAR* app);
    void BeforeModal(IVApplication FAR* app);
    void AfterModal(IVApplication FAR* app);
    void WindowOpened(IVWindow FAR* window);
    void SelectionChanged(IVWindow FAR* window);
    void BeforeWindowClosed(IVWindow FAR* window);
    void WindowActivated(IVWindow FAR* window);
    void BeforeWindowSelDelete(IVWindow FAR* window);
    void BeforeWindowPageTurn(IVWindow FAR* window);
    void WindowTurnedToPage(IVWindow FAR* window);
    void DocumentOpened(IVDocument FAR* doc);
    void DocumentCreated(IVDocument FAR* doc);
    void DocumentSaved(IVDocument FAR* doc);
    void DocumentSavedAs(IVDocument FAR* doc);
    void DocumentChanged(IVDocument FAR* doc);
    void BeforeDocumentClose(IVDocument FAR* doc);
    void StyleAdded(IVStyle FAR* style);
    void StyleChanged(IVStyle FAR* style);
    void BeforeStyleDelete(IVStyle FAR* style);
    void MasterAdded(IVMaster FAR* master);
    void MasterChanged(IVMaster FAR* master);
    void BeforeMasterDelete(IVMaster FAR* master);
    void PageAdded(IVPage FAR* page);
    void PageChanged(IVPage FAR* page);
    void BeforePageDelete(IVPage FAR* page);
    void ShapeAdded(IVShape FAR* shape);
    void BeforeSelectionDelete(IVSelection FAR* selection);
    void ShapeChanged(IVShape FAR* shape);
    void SelectionAdded(IVSelection FAR* selection);
    void BeforeShapeDelete(IVShape FAR* shape);
    void TextChanged(IVShape FAR* shape);
    void CellChanged(IVCell FAR* cell);
    void MarkerEvent(IVApplication FAR* app, long SequenceNum, BSTR ContextString);
    void NoEventsPending(IVApplication FAR* app);
    void VisioIsIdle(IVApplication FAR* app);
    void MustFlushScopeBeginning(IVApplication FAR* app);
    void MustFlushScopeEnded(IVApplication FAR* app);
    void RunModeEntered(IVDocument FAR* doc);
    void DesignModeEntered(IVDocument FAR* doc);
    void BeforeDocumentSave(IVDocument FAR* doc);
    void BeforeDocumentSaveAs(IVDocument FAR* doc);
    void FormulaChanged(IVCell FAR* cell);
    void ConnectionsAdded(IVConnects FAR* connects);
    void ConnectionsDeleted(IVConnects FAR* connects);
    */
};

DEFINE_GUID(DIID_EWindows,0x000D0B01L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EWindows */
#undef INTERFACE
#define INTERFACE EWindows

DECLARE_INTERFACE_(EWindows, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EWindows methods:
    void WindowOpened(IVWindow FAR* window);
    void SelectionChanged(IVWindow FAR* window);
    void BeforeWindowClosed(IVWindow FAR* window);
    void WindowActivated(IVWindow FAR* window);
    void BeforeWindowSelDelete(IVWindow FAR* window);
    void BeforeWindowPageTurn(IVWindow FAR* window);
    void WindowTurnedToPage(IVWindow FAR* window);
    */
};

DEFINE_GUID(DIID_EWindow,0x000D0B02L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EWindow */
#undef INTERFACE
#define INTERFACE EWindow

DECLARE_INTERFACE_(EWindow, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EWindow methods:
    void SelectionChanged(IVWindow FAR* window);
    void BeforeWindowClosed(IVWindow FAR* window);
    void WindowActivated(IVWindow FAR* window);
    void BeforeWindowSelDelete(IVWindow FAR* window);
    void BeforeWindowPageTurn(IVWindow FAR* window);
    void WindowTurnedToPage(IVWindow FAR* window);
    */
};

DEFINE_GUID(DIID_EDocuments,0x000D0B03L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EDocuments */
#undef INTERFACE
#define INTERFACE EDocuments

DECLARE_INTERFACE_(EDocuments, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EDocuments methods:
    void DocumentOpened(IVDocument FAR* doc);
    void DocumentCreated(IVDocument FAR* doc);
    void DocumentSaved(IVDocument FAR* doc);
    void DocumentSavedAs(IVDocument FAR* doc);
    void DocumentChanged(IVDocument FAR* doc);
    void BeforeDocumentClose(IVDocument FAR* doc);
    void StyleAdded(IVStyle FAR* style);
    void StyleChanged(IVStyle FAR* style);
    void BeforeStyleDelete(IVStyle FAR* style);
    void MasterAdded(IVMaster FAR* master);
    void MasterChanged(IVMaster FAR* master);
    void BeforeMasterDelete(IVMaster FAR* master);
    void PageAdded(IVPage FAR* page);
    void PageChanged(IVPage FAR* page);
    void BeforePageDelete(IVPage FAR* page);
    void ShapeAdded(IVShape FAR* shape);
    void BeforeSelectionDelete(IVSelection FAR* selection);
    void ShapeChanged(IVShape FAR* shape);
    void SelectionAdded(IVSelection FAR* selection);
    void BeforeShapeDelete(IVShape FAR* shape);
    void TextChanged(IVShape FAR* shape);
    void CellChanged(IVCell FAR* cell);
    void RunModeEntered(IVDocument FAR* doc);
    void DesignModeEntered(IVDocument FAR* doc);
    void BeforeDocumentSave(IVDocument FAR* doc);
    void BeforeDocumentSaveAs(IVDocument FAR* doc);
    void FormulaChanged(IVCell FAR* cell);
    void ConnectionsAdded(IVConnects FAR* connects);
    void ConnectionsDeleted(IVConnects FAR* connects);
    */
};

DEFINE_GUID(DIID_EStyles,0x000D0B05L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EStyles */
#undef INTERFACE
#define INTERFACE EStyles

DECLARE_INTERFACE_(EStyles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EStyles methods:
    void StyleAdded(IVStyle FAR* style);
    void StyleChanged(IVStyle FAR* style);
    void BeforeStyleDelete(IVStyle FAR* style);
    */
};

DEFINE_GUID(DIID_EStyle,0x000D0B06L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EStyle */
#undef INTERFACE
#define INTERFACE EStyle

DECLARE_INTERFACE_(EStyle, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EStyle methods:
    void StyleChanged(IVStyle FAR* style);
    void BeforeStyleDelete(IVStyle FAR* style);
    */
};

DEFINE_GUID(DIID_EMasters,0x000D0B07L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EMasters */
#undef INTERFACE
#define INTERFACE EMasters

DECLARE_INTERFACE_(EMasters, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EMasters methods:
    void MasterAdded(IVMaster FAR* master);
    void MasterChanged(IVMaster FAR* master);
    void BeforeMasterDelete(IVMaster FAR* master);
    void ShapeAdded(IVShape FAR* shape);
    void BeforeSelectionDelete(IVSelection FAR* selection);
    void ShapeChanged(IVShape FAR* shape);
    void SelectionAdded(IVSelection FAR* selection);
    void BeforeShapeDelete(IVShape FAR* shape);
    void TextChanged(IVShape FAR* shape);
    void CellChanged(IVCell FAR* cell);
    void FormulaChanged(IVCell FAR* cell);
    void ConnectionsAdded(IVConnects FAR* connects);
    void ConnectionsDeleted(IVConnects FAR* connects);
    */
};

DEFINE_GUID(DIID_EMaster,0x000D0B08L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EMaster */
#undef INTERFACE
#define INTERFACE EMaster

DECLARE_INTERFACE_(EMaster, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EMaster methods:
    void MasterChanged(IVMaster FAR* master);
    void BeforeMasterDelete(IVMaster FAR* master);
    void ShapeAdded(IVShape FAR* shape);
    void BeforeSelectionDelete(IVSelection FAR* selection);
    void ShapeChanged(IVShape FAR* shape);
    void SelectionAdded(IVSelection FAR* selection);
    void BeforeShapeDelete(IVShape FAR* shape);
    void TextChanged(IVShape FAR* shape);
    void CellChanged(IVCell FAR* cell);
    void FormulaChanged(IVCell FAR* cell);
    void ConnectionsAdded(IVConnects FAR* connects);
    void ConnectionsDeleted(IVConnects FAR* connects);
    */
};

DEFINE_GUID(DIID_EPages,0x000D0B09L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EPages */
#undef INTERFACE
#define INTERFACE EPages

DECLARE_INTERFACE_(EPages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EPages methods:
    void PageAdded(IVPage FAR* page);
    void PageChanged(IVPage FAR* page);
    void BeforePageDelete(IVPage FAR* page);
    void ShapeAdded(IVShape FAR* shape);
    void BeforeSelectionDelete(IVSelection FAR* selection);
    void ShapeChanged(IVShape FAR* shape);
    void SelectionAdded(IVSelection FAR* selection);
    void BeforeShapeDelete(IVShape FAR* shape);
    void TextChanged(IVShape FAR* shape);
    void CellChanged(IVCell FAR* cell);
    void FormulaChanged(IVCell FAR* cell);
    void ConnectionsAdded(IVConnects FAR* connects);
    void ConnectionsDeleted(IVConnects FAR* connects);
    */
};

DEFINE_GUID(DIID_EPage,0x000D0B0AL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EPage */
#undef INTERFACE
#define INTERFACE EPage

DECLARE_INTERFACE_(EPage, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EPage methods:
    void PageChanged(IVPage FAR* page);
    void BeforePageDelete(IVPage FAR* page);
    void ShapeAdded(IVShape FAR* shape);
    void BeforeSelectionDelete(IVSelection FAR* selection);
    void ShapeChanged(IVShape FAR* shape);
    void SelectionAdded(IVSelection FAR* selection);
    void BeforeShapeDelete(IVShape FAR* shape);
    void TextChanged(IVShape FAR* shape);
    void CellChanged(IVCell FAR* cell);
    void FormulaChanged(IVCell FAR* cell);
    void ConnectionsAdded(IVConnects FAR* connects);
    void ConnectionsDeleted(IVConnects FAR* connects);
    */
};

DEFINE_GUID(DIID_EShape,0x000D0B0BL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: EShape */
#undef INTERFACE
#define INTERFACE EShape

DECLARE_INTERFACE_(EShape, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* EShape methods:
    void CellChanged(IVCell FAR* cell);
    void ShapeAdded(IVShape FAR* shape);
    void BeforeSelectionDelete(IVSelection FAR* selection);
    void ShapeChanged(IVShape FAR* shape);
    void SelectionAdded(IVSelection FAR* selection);
    void BeforeShapeDelete(IVShape FAR* shape);
    void TextChanged(IVShape FAR* shape);
    void FormulaChanged(IVCell FAR* cell);
    */
};

DEFINE_GUID(DIID_ECharacters,0x000D0B0CL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: ECharacters */
#undef INTERFACE
#define INTERFACE ECharacters

DECLARE_INTERFACE_(ECharacters, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ECharacters methods:
    void TextChanged(IVShape FAR* shape);
    */
};

DEFINE_GUID(DIID_ECell,0x000D0B0DL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: ECell */
#undef INTERFACE
#define INTERFACE ECell

DECLARE_INTERFACE_(ECell, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ECell methods:
    void CellChanged(IVCell FAR* cell);
    void FormulaChanged(IVCell FAR* cell);
    */
};

DEFINE_GUID(CLSID_Application,0x00021A20L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Application;
#endif

DEFINE_GUID(CLSID_Document,0x00021A21L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Document;
#endif

DEFINE_GUID(CLSID_Documents,0x000D0A00L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Documents;
#endif

DEFINE_GUID(CLSID_Styles,0x000D0A01L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Styles;
#endif

DEFINE_GUID(CLSID_Style,0x000D0A02L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Style;
#endif

DEFINE_GUID(CLSID_Masters,0x000D0A03L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Masters;
#endif

DEFINE_GUID(CLSID_Master,0x000D0A04L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Master;
#endif

DEFINE_GUID(CLSID_Pages,0x000D0A05L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Pages;
#endif

DEFINE_GUID(CLSID_Page,0x000D0A06L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Page;
#endif

DEFINE_GUID(CLSID_Layers,0x000D0A07L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Layers;
#endif

DEFINE_GUID(CLSID_Layer,0x000D0A08L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Layer;
#endif

DEFINE_GUID(CLSID_Shapes,0x000D0A09L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Shapes;
#endif

DEFINE_GUID(CLSID_Shape,0x000D0A0AL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Shape;
#endif

DEFINE_GUID(CLSID_Windows,0x000D0A0BL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Windows;
#endif

DEFINE_GUID(CLSID_Window,0x000D0A0CL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Window;
#endif

DEFINE_GUID(CLSID_Cell,0x000D0A0DL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Cell;
#endif

DEFINE_GUID(CLSID_Selection,0x000D0A0EL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Selection;
#endif

DEFINE_GUID(CLSID_Font,0x000D0A0FL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Font;
#endif

DEFINE_GUID(CLSID_Fonts,0x000D0A10L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Fonts;
#endif

DEFINE_GUID(CLSID_Color,0x000D0A11L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Color;
#endif

DEFINE_GUID(CLSID_Colors,0x000D0A12L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Colors;
#endif

DEFINE_GUID(CLSID_Addon,0x000D0A13L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Addon;
#endif

DEFINE_GUID(CLSID_Addons,0x000D0A14L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Addons;
#endif

DEFINE_GUID(CLSID_Event,0x000D0A15L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Event;
#endif

DEFINE_GUID(CLSID_EventList,0x000D0A16L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class EventList;
#endif

DEFINE_GUID(CLSID_Characters,0x000D0A17L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Characters;
#endif

DEFINE_GUID(CLSID_Connect,0x000D0A18L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Connect;
#endif

DEFINE_GUID(CLSID_Connects,0x000D0A19L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Connects;
#endif

DEFINE_GUID(CLSID_Global,0x000D0A1AL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Global;
#endif

DEFINE_GUID(IID_IVMenuItem,0x000D0212L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVMenuItem */
#undef INTERFACE
#define INTERFACE IVMenuItem

DECLARE_INTERFACE_(IVMenuItem, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVMenuItem methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(get_Index)(THIS_ long FAR* plIndex) PURE;
    STDMETHOD(get_MenuItems)(THIS_ IVMenuItems FAR* FAR* lplpVMenuItems) PURE;
    STDMETHOD(get_Parent)(THIS_ IVMenuItems FAR* FAR* lplpVMenuItems) PURE;
    STDMETHOD(put_CmdNum)(THIS_ short wCmd) PURE;
    STDMETHOD(get_CmdNum)(THIS_ short FAR* pwCmd) PURE;
    STDMETHOD(put_HelpContextID)(THIS_ short HelpContextID) PURE;
    STDMETHOD(get_HelpContextID)(THIS_ short FAR* pHelpContextID) PURE;
    STDMETHOD(get_IsSeparator)(THIS_ short FAR* pIsSeparator) PURE;
    STDMETHOD(get_IsHierarchical)(THIS_ short FAR* pIsHierarchical) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR Caption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(put_ActionText)(THIS_ BSTR ActionText) PURE;
    STDMETHOD(get_ActionText)(THIS_ BSTR FAR* pActionText) PURE;
    STDMETHOD(put_MiniHelp)(THIS_ BSTR MiniHelp) PURE;
    STDMETHOD(get_MiniHelp)(THIS_ BSTR FAR* pMiniHelp) PURE;
    STDMETHOD(put_AddOnName)(THIS_ BSTR AddOnName) PURE;
    STDMETHOD(get_AddOnName)(THIS_ BSTR FAR* pAddOnName) PURE;
    STDMETHOD(put_AddOnArgs)(THIS_ BSTR AddOnArgs) PURE;
    STDMETHOD(get_AddOnArgs)(THIS_ BSTR FAR* pAddOnArgs) PURE;
    STDMETHOD(put_HelpFile)(THIS_ BSTR HelpFile) PURE;
    STDMETHOD(get_HelpFile)(THIS_ BSTR FAR* pHelpFile) PURE;
};

DEFINE_GUID(IID_IEnumVMenuItem,0x000D0213L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVMenuItem */
#undef INTERFACE
#define INTERFACE IEnumVMenuItem

DECLARE_INTERFACE_(IEnumVMenuItem, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVMenuItem methods */
    STDMETHOD(Next)(THIS_ long celt, IVMenuItem FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVMenuItem FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVMenuItems,0x000D0216L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVMenuItems */
#undef INTERFACE
#define INTERFACE IVMenuItems

DECLARE_INTERFACE_(IVMenuItems, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVMenuItems methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVMenuItem) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVMenuItem FAR* FAR* lplpMenuItem) PURE;
    STDMETHOD(Add)(THIS_ IVMenuItem FAR* FAR* lplpMenuItem) PURE;
    STDMETHOD(AddAt)(THIS_ long lIndex, IVMenuItem FAR* FAR* lplpMenuItem) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVMenu FAR* FAR* lplpVMenu) PURE;
};

DEFINE_GUID(IID_IVMenu,0x000D0222L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVMenu */
#undef INTERFACE
#define INTERFACE IVMenu

DECLARE_INTERFACE_(IVMenu, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVMenu methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR Caption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(get_Index)(THIS_ long FAR* plIndex) PURE;
    STDMETHOD(put_MDIWindowMenu)(THIS_ short MDIWindowMenu) PURE;
    STDMETHOD(get_MDIWindowMenu)(THIS_ short FAR* pMDIWindowMenu) PURE;
    STDMETHOD(get_MenuItems)(THIS_ IVMenuItems FAR* FAR* lplpVMenuItems) PURE;
    STDMETHOD(get_Parent)(THIS_ IVMenus FAR* FAR* lplpVMenus) PURE;
};

DEFINE_GUID(IID_IEnumVMenu,0x000D0223L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVMenu */
#undef INTERFACE
#define INTERFACE IEnumVMenu

DECLARE_INTERFACE_(IEnumVMenu, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVMenu methods */
    STDMETHOD(Next)(THIS_ long celt, IVMenu FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVMenu FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVMenus,0x000D0225L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVMenus */
#undef INTERFACE
#define INTERFACE IVMenus

DECLARE_INTERFACE_(IVMenus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVMenus methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVMenu) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVMenu FAR* FAR* lplpMenu) PURE;
    STDMETHOD(Add)(THIS_ IVMenu FAR* FAR* lplpMenu) PURE;
    STDMETHOD(AddAt)(THIS_ long lIndex, IVMenu FAR* FAR* lplpMenu) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVMenuSet FAR* FAR* lplpVMenuSet) PURE;
};

DEFINE_GUID(IID_IVMenuSet,0x000D0232L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVMenuSet */
#undef INTERFACE
#define INTERFACE IVMenuSet

DECLARE_INTERFACE_(IVMenuSet, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVMenuSet methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR Caption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(get_SetID)(THIS_ long FAR* plSetID) PURE;
    STDMETHOD(get_Menus)(THIS_ IVMenus FAR* FAR* lplpVMenus) PURE;
    STDMETHOD(get_Parent)(THIS_ IVMenuSets FAR* FAR* lplpVMenuSets) PURE;
};

DEFINE_GUID(IID_IEnumVMenuSet,0x000D0233L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVMenuSet */
#undef INTERFACE
#define INTERFACE IEnumVMenuSet

DECLARE_INTERFACE_(IEnumVMenuSet, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVMenuSet methods */
    STDMETHOD(Next)(THIS_ long celt, IVMenuSet FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVMenuSet FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVMenuSets,0x000D0236L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVMenuSets */
#undef INTERFACE
#define INTERFACE IVMenuSets

DECLARE_INTERFACE_(IVMenuSets, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVMenuSets methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVMenuSet) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVMenuSet FAR* FAR* lplpMenuSet) PURE;
    STDMETHOD(get_ItemAtID)(THIS_ long lID, IVMenuSet FAR* FAR* lplpMenuSet) PURE;
    STDMETHOD(Add)(THIS_ IVMenuSet FAR* FAR* lplpMenuSet) PURE;
    STDMETHOD(AddAtID)(THIS_ long lID, IVMenuSet FAR* FAR* lplpMenuSet) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVUIObject FAR* FAR* lplpVUIObject) PURE;
};

DEFINE_GUID(IID_IVToolbarItem,0x000D0242L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVToolbarItem */
#undef INTERFACE
#define INTERFACE IVToolbarItem

DECLARE_INTERFACE_(IVToolbarItem, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVToolbarItem methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(IconFileName)(THIS_ BSTR IconFileName) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pActionText) PURE;
    STDMETHOD(get_Index)(THIS_ long FAR* plIndex) PURE;
    STDMETHOD(get_Parent)(THIS_ IVToolbarItems FAR* FAR* lplpVToolbarItems) PURE;
    STDMETHOD(put_CmdNum)(THIS_ short wCmd) PURE;
    STDMETHOD(get_CmdNum)(THIS_ short FAR* pwCmd) PURE;
    STDMETHOD(put_HelpContextID)(THIS_ short HelpContextID) PURE;
    STDMETHOD(get_HelpContextID)(THIS_ short FAR* pHelpContextID) PURE;
    STDMETHOD(put_ActionText)(THIS_ BSTR ActionText) PURE;
    STDMETHOD(get_ActionText)(THIS_ BSTR FAR* pActionText) PURE;
    STDMETHOD(put_AddOnName)(THIS_ BSTR AddOnName) PURE;
    STDMETHOD(get_AddOnName)(THIS_ BSTR FAR* pAddOnName) PURE;
    STDMETHOD(put_AddOnArgs)(THIS_ BSTR AddOnArgs) PURE;
    STDMETHOD(get_AddOnArgs)(THIS_ BSTR FAR* pAddOnArgs) PURE;
    STDMETHOD(put_HelpFile)(THIS_ BSTR HelpFile) PURE;
    STDMETHOD(get_HelpFile)(THIS_ BSTR FAR* pHelpFile) PURE;
    STDMETHOD(put_CntrlType)(THIS_ short wCntrlType) PURE;
    STDMETHOD(get_CntrlType)(THIS_ short FAR* pwCntrlType) PURE;
    STDMETHOD(put_CntrlID)(THIS_ short wCntrlID) PURE;
    STDMETHOD(get_CntrlID)(THIS_ short FAR* pwCntrlID) PURE;
    STDMETHOD(put_TypeSpecific1)(THIS_ short wTypeSpecific) PURE;
    STDMETHOD(get_TypeSpecific1)(THIS_ short FAR* pwTypeSpecific) PURE;
    STDMETHOD(put_Priority)(THIS_ short wPriority) PURE;
    STDMETHOD(get_Priority)(THIS_ short FAR* pwPriority) PURE;
    STDMETHOD(put_Spacing)(THIS_ short wSpacing) PURE;
    STDMETHOD(get_Spacing)(THIS_ short FAR* pwSpacing) PURE;
    STDMETHOD(put_TypeSpecific2)(THIS_ short wTypeSpecific) PURE;
    STDMETHOD(get_TypeSpecific2)(THIS_ short FAR* pwTypeSpecific) PURE;
};

DEFINE_GUID(IID_IEnumVToolbarItem,0x000D0243L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVToolbarItem */
#undef INTERFACE
#define INTERFACE IEnumVToolbarItem

DECLARE_INTERFACE_(IEnumVToolbarItem, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVToolbarItem methods */
    STDMETHOD(Next)(THIS_ long celt, IVToolbarItem FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVToolbarItem FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVToolbarItems,0x000D0245L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVToolbarItems */
#undef INTERFACE
#define INTERFACE IVToolbarItems

DECLARE_INTERFACE_(IVToolbarItems, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVToolbarItems methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVToolbarItem) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVToolbarItem FAR* FAR* lplpToolbarItem) PURE;
    STDMETHOD(Add)(THIS_ IVToolbarItem FAR* FAR* lplpToolbarItem) PURE;
    STDMETHOD(AddAt)(THIS_ long lIndex, IVToolbarItem FAR* FAR* lplpToolbarItem) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVToolbar FAR* FAR* lplpVToolbar) PURE;
};

DEFINE_GUID(IID_IVToolbar,0x000D0252L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVToolbar */
#undef INTERFACE
#define INTERFACE IVToolbar

DECLARE_INTERFACE_(IVToolbar, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVToolbar methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR Caption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(get_Index)(THIS_ long FAR* plIndex) PURE;
    STDMETHOD(get_ToolbarItems)(THIS_ IVToolbarItems FAR* FAR* lplpVToolbarItems) PURE;
    STDMETHOD(get_Parent)(THIS_ IVToolbars FAR* FAR* lplpVToolbars) PURE;
};

DEFINE_GUID(IID_IEnumVToolbar,0x000D0253L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVToolbar */
#undef INTERFACE
#define INTERFACE IEnumVToolbar

DECLARE_INTERFACE_(IEnumVToolbar, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVToolbar methods */
    STDMETHOD(Next)(THIS_ long celt, IVToolbar FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVToolbar FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVToolbars,0x000D0255L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVToolbars */
#undef INTERFACE
#define INTERFACE IVToolbars

DECLARE_INTERFACE_(IVToolbars, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVToolbars methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVToolbar) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVToolbar FAR* FAR* lplpToolbar) PURE;
    STDMETHOD(Add)(THIS_ IVToolbar FAR* FAR* lplpToolbar) PURE;
    STDMETHOD(AddAt)(THIS_ long lIndex, IVToolbar FAR* FAR* lplpToolbar) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVToolbarSet FAR* FAR* lplpVToolbarSet) PURE;
};

DEFINE_GUID(IID_IVToolbarSet,0x000D0262L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVToolbarSet */
#undef INTERFACE
#define INTERFACE IVToolbarSet

DECLARE_INTERFACE_(IVToolbarSet, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVToolbarSet methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR Caption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(get_SetID)(THIS_ long FAR* plSetID) PURE;
    STDMETHOD(get_Toolbars)(THIS_ IVToolbars FAR* FAR* lplpVToolbars) PURE;
    STDMETHOD(get_Parent)(THIS_ IVToolbarSets FAR* FAR* lplpVToolbarSets) PURE;
};

DEFINE_GUID(IID_IEnumVToolbarSet,0x000D0263L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVToolbarSet */
#undef INTERFACE
#define INTERFACE IEnumVToolbarSet

DECLARE_INTERFACE_(IEnumVToolbarSet, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVToolbarSet methods */
    STDMETHOD(Next)(THIS_ long celt, IVToolbarSet FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVToolbarSet FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVToolbarSets,0x000D0266L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVToolbarSets */
#undef INTERFACE
#define INTERFACE IVToolbarSets

DECLARE_INTERFACE_(IVToolbarSets, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVToolbarSets methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVToolbarSet) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVToolbarSet FAR* FAR* lplpToolbarSet) PURE;
    STDMETHOD(get_ItemAtID)(THIS_ long lID, IVToolbarSet FAR* FAR* lplpToolbarSet) PURE;
    STDMETHOD(Add)(THIS_ IVToolbarSet FAR* FAR* lplpToolbarSet) PURE;
    STDMETHOD(AddAtID)(THIS_ long lID, IVToolbarSet FAR* FAR* lplpToolbarSet) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVUIObject FAR* FAR* lplpVUIObject) PURE;
};

DEFINE_GUID(IID_IVStatusBarItem,0x000D0272L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVStatusBarItem */
#undef INTERFACE
#define INTERFACE IVStatusBarItem

DECLARE_INTERFACE_(IVStatusBarItem, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVStatusBarItem methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(IconFileName)(THIS_ BSTR IconFileName) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pActionText) PURE;
    STDMETHOD(get_Index)(THIS_ long FAR* plIndex) PURE;
    STDMETHOD(get_Parent)(THIS_ IVStatusBarItems FAR* FAR* lplpVStatusBarItems) PURE;
    STDMETHOD(put_CmdNum)(THIS_ short wCmd) PURE;
    STDMETHOD(get_CmdNum)(THIS_ short FAR* pwCmd) PURE;
    STDMETHOD(put_HelpContextID)(THIS_ short HelpContextID) PURE;
    STDMETHOD(get_HelpContextID)(THIS_ short FAR* pHelpContextID) PURE;
    STDMETHOD(put_ActionText)(THIS_ BSTR ActionText) PURE;
    STDMETHOD(get_ActionText)(THIS_ BSTR FAR* pActionText) PURE;
    STDMETHOD(put_AddOnName)(THIS_ BSTR AddOnName) PURE;
    STDMETHOD(get_AddOnName)(THIS_ BSTR FAR* pAddOnName) PURE;
    STDMETHOD(put_AddOnArgs)(THIS_ BSTR AddOnArgs) PURE;
    STDMETHOD(get_AddOnArgs)(THIS_ BSTR FAR* pAddOnArgs) PURE;
    STDMETHOD(put_HelpFile)(THIS_ BSTR HelpFile) PURE;
    STDMETHOD(get_HelpFile)(THIS_ BSTR FAR* pHelpFile) PURE;
    STDMETHOD(put_CntrlType)(THIS_ short wCntrlType) PURE;
    STDMETHOD(get_CntrlType)(THIS_ short FAR* pwCntrlType) PURE;
    STDMETHOD(put_CntrlID)(THIS_ short wCntrlID) PURE;
    STDMETHOD(get_CntrlID)(THIS_ short FAR* pwCntrlID) PURE;
    STDMETHOD(put_TypeSpecific1)(THIS_ short wTypeSpecific) PURE;
    STDMETHOD(get_TypeSpecific1)(THIS_ short FAR* pwTypeSpecific) PURE;
    STDMETHOD(put_Priority)(THIS_ short wPriority) PURE;
    STDMETHOD(get_Priority)(THIS_ short FAR* pwPriority) PURE;
    STDMETHOD(put_Spacing)(THIS_ short wSpacing) PURE;
    STDMETHOD(get_Spacing)(THIS_ short FAR* pwSpacing) PURE;
    STDMETHOD(put_TypeSpecific2)(THIS_ short wTypeSpecific) PURE;
    STDMETHOD(get_TypeSpecific2)(THIS_ short FAR* pwTypeSpecific) PURE;
};

DEFINE_GUID(IID_IEnumVStatusBarItem,0x000D0273L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVStatusBarItem */
#undef INTERFACE
#define INTERFACE IEnumVStatusBarItem

DECLARE_INTERFACE_(IEnumVStatusBarItem, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVStatusBarItem methods */
    STDMETHOD(Next)(THIS_ long celt, IVStatusBarItem FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVStatusBarItem FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVStatusBarItems,0x000D0275L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVStatusBarItems */
#undef INTERFACE
#define INTERFACE IVStatusBarItems

DECLARE_INTERFACE_(IVStatusBarItems, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVStatusBarItems methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVStatusBar) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVStatusBarItem FAR* FAR* lplpStatusBar) PURE;
    STDMETHOD(Add)(THIS_ IVStatusBarItem FAR* FAR* lplpStatusBarItem) PURE;
    STDMETHOD(AddAt)(THIS_ long lIndex, IVStatusBarItem FAR* FAR* lplpStatusBarItem) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVStatusBar FAR* FAR* lplpVStatusBar) PURE;
};

DEFINE_GUID(IID_IVStatusBar,0x000D0282L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVStatusBar */
#undef INTERFACE
#define INTERFACE IVStatusBar

DECLARE_INTERFACE_(IVStatusBar, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVStatusBar methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR Caption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pCaption) PURE;
    STDMETHOD(get_SetID)(THIS_ long FAR* plSetID) PURE;
    STDMETHOD(get_StatusBarItems)(THIS_ IVStatusBarItems FAR* FAR* lplpVStatusBarItems) PURE;
    STDMETHOD(get_Parent)(THIS_ IVStatusBars FAR* FAR* lplpVStatusBars) PURE;
};

DEFINE_GUID(IID_IEnumVStatusBar,0x000D0283L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVStatusBar */
#undef INTERFACE
#define INTERFACE IEnumVStatusBar

DECLARE_INTERFACE_(IEnumVStatusBar, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVStatusBar methods */
    STDMETHOD(Next)(THIS_ long celt, IVStatusBar FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVStatusBar FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVStatusBars,0x000D0285L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVStatusBars */
#undef INTERFACE
#define INTERFACE IVStatusBars

DECLARE_INTERFACE_(IVStatusBars, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVStatusBars methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVStatusBar) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVStatusBar FAR* FAR* lplpStatusBar) PURE;
    STDMETHOD(get_ItemAtID)(THIS_ long lID, IVStatusBar FAR* FAR* lplpStatusBar) PURE;
    STDMETHOD(Add)(THIS_ IVStatusBar FAR* FAR* lplpStatusBar) PURE;
    STDMETHOD(AddAtID)(THIS_ long lID, IVStatusBar FAR* FAR* lplpStatusBar) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVUIObject FAR* FAR* lplpVUIObject) PURE;
};

DEFINE_GUID(IID_IVAccelItem,0x000D0292L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVAccelItem */
#undef INTERFACE
#define INTERFACE IVAccelItem

DECLARE_INTERFACE_(IVAccelItem, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVAccelItem methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_Default)(THIS_ short FAR* pwCmd) PURE;
    STDMETHOD(put_CmdNum)(THIS_ short wCmd) PURE;
    STDMETHOD(get_CmdNum)(THIS_ short FAR* pwCmd) PURE;
    STDMETHOD(put_Key)(THIS_ short Key) PURE;
    STDMETHOD(get_Key)(THIS_ short FAR* pKey) PURE;
    STDMETHOD(put_Alt)(THIS_ short Alt) PURE;
    STDMETHOD(get_Alt)(THIS_ short FAR* pAlt) PURE;
    STDMETHOD(put_Shift)(THIS_ short Shift) PURE;
    STDMETHOD(get_Shift)(THIS_ short FAR* pShift) PURE;
    STDMETHOD(put_Control)(THIS_ short Control) PURE;
    STDMETHOD(get_Control)(THIS_ short FAR* pControl) PURE;
    STDMETHOD(get_Parent)(THIS_ IVAccelItems FAR* FAR* lplpVAccelItems) PURE;
};

DEFINE_GUID(IID_IEnumVAccelItem,0x000D0293L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVAccelItem */
#undef INTERFACE
#define INTERFACE IEnumVAccelItem

DECLARE_INTERFACE_(IEnumVAccelItem, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVAccelItem methods */
    STDMETHOD(Next)(THIS_ long celt, IVAccelItem FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVAccelItem FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVAccelItems,0x000D0295L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVAccelItems */
#undef INTERFACE
#define INTERFACE IVAccelItems

DECLARE_INTERFACE_(IVAccelItems, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVAccelItems methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVAccelItem) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVAccelItem FAR* FAR* lplpAccelItem) PURE;
    STDMETHOD(Add)(THIS_ IVAccelItem FAR* FAR* lplpAccelItem) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVAccelTable FAR* FAR* lplpVAccelTable) PURE;
};

DEFINE_GUID(IID_IVAccelTable,0x000D02A2L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVAccelTable */
#undef INTERFACE
#define INTERFACE IVAccelTable

DECLARE_INTERFACE_(IVAccelTable, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVAccelTable methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pTableName) PURE;
    STDMETHOD(put_TableName)(THIS_ BSTR TableName) PURE;
    STDMETHOD(get_TableName)(THIS_ BSTR FAR* pTableName) PURE;
    STDMETHOD(get_SetID)(THIS_ long FAR* plSetID) PURE;
    STDMETHOD(get_AccelItems)(THIS_ IVAccelItems FAR* FAR* lplpVAccelItems) PURE;
    STDMETHOD(get_Parent)(THIS_ IVAccelTables FAR* FAR* lplpVAccelTables) PURE;
};

DEFINE_GUID(IID_IEnumVAccelTable,0x000D02A3L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IEnumVAccelTable */
#undef INTERFACE
#define INTERFACE IEnumVAccelTable

DECLARE_INTERFACE_(IEnumVAccelTable, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IEnumVAccelTable methods */
    STDMETHOD(Next)(THIS_ long celt, IVAccelTable FAR* FAR* rgelt, long FAR* pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IEnumVAccelTable FAR* FAR* ppenm) PURE;
};

DEFINE_GUID(IID_IVAccelTables,0x000D02A5L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVAccelTables */
#undef INTERFACE
#define INTERFACE IVAccelTables

DECLARE_INTERFACE_(IVAccelTables, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVAccelTables methods */
    STDMETHOD(get__NewEnum)(THIS_ IUnknown * FAR* lplpIEnumVAccelTable) PURE;
    STDMETHOD(get_Item)(THIS_ long lIndex, IVAccelTable FAR* FAR* lplpAccelTable) PURE;
    STDMETHOD(get_ItemAtID)(THIS_ long lID, IVAccelTable FAR* FAR* lplpAccelTable) PURE;
    STDMETHOD(Add)(THIS_ IVAccelTable FAR* FAR* lplpAccelTable) PURE;
    STDMETHOD(AddAtID)(THIS_ long lID, IVAccelTable FAR* FAR* lplpAccelTable) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplCount) PURE;
    STDMETHOD(get_Parent)(THIS_ IVUIObject FAR* FAR* lplpVUIObject) PURE;
};

DEFINE_GUID(IID_IVUIObject,0x000D0202L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVUIObject */
#undef INTERFACE
#define INTERFACE IVUIObject

DECLARE_INTERFACE_(IVUIObject, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVUIObject methods */
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_Default)(THIS_ BSTR FAR* pName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pName) PURE;
    STDMETHOD(put_Flavor)(THIS_ short Flavor) PURE;
    STDMETHOD(get_Flavor)(THIS_ short FAR* pFlavor) PURE;
    STDMETHOD(get_MenuSets)(THIS_ IVMenuSets FAR* FAR* lplpVMenuSets) PURE;
    STDMETHOD(get_ToolbarSets)(THIS_ IVToolbarSets FAR* FAR* lplpVToolbarSets) PURE;
    STDMETHOD(get_StatusBars)(THIS_ IVStatusBars FAR* FAR* lplpVStatusBars) PURE;
    STDMETHOD(get_AccelTables)(THIS_ IVAccelTables FAR* FAR* lplpVAccelTables) PURE;
    STDMETHOD(SaveToFile)(THIS_ BSTR FileName) PURE;
    STDMETHOD(LoadFromFile)(THIS_ BSTR FileName) PURE;
    STDMETHOD(UpdateUI)(THIS) PURE;
};

DEFINE_GUID(CLSID_UIObject,0x000D0201L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class UIObject;
#endif

DEFINE_GUID(CLSID_MenuItem,0x000D0210L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class MenuItem;
#endif

DEFINE_GUID(CLSID_MenuItems,0x000D0215L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class MenuItems;
#endif

DEFINE_GUID(CLSID_Menu,0x000D0220L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Menu;
#endif

DEFINE_GUID(CLSID_Menus,0x000D0224L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Menus;
#endif

DEFINE_GUID(CLSID_MenuSet,0x000D0230L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class MenuSet;
#endif

DEFINE_GUID(CLSID_MenuSets,0x000D0235L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class MenuSets;
#endif

DEFINE_GUID(CLSID_ToolbarItem,0x000D0240L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class ToolbarItem;
#endif

DEFINE_GUID(CLSID_ToolbarItems,0x000D0244L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class ToolbarItems;
#endif

DEFINE_GUID(CLSID_Toolbar,0x000D0250L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Toolbar;
#endif

DEFINE_GUID(CLSID_Toolbars,0x000D0254L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Toolbars;
#endif

DEFINE_GUID(CLSID_ToolbarSet,0x000D0260L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class ToolbarSet;
#endif

DEFINE_GUID(CLSID_ToolbarSets,0x000D0265L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class ToolbarSets;
#endif

DEFINE_GUID(CLSID_StatusBarItem,0x000D0270L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class StatusBarItem;
#endif

DEFINE_GUID(CLSID_StatusBarItems,0x000D0274L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class StatusBarItems;
#endif

DEFINE_GUID(CLSID_StatusBar,0x000D0280L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class StatusBar;
#endif

DEFINE_GUID(CLSID_StatusBars,0x000D0284L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class StatusBars;
#endif

DEFINE_GUID(CLSID_AccelItem,0x000D0290L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class AccelItem;
#endif

DEFINE_GUID(CLSID_AccelItems,0x000D0294L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class AccelItems;
#endif

DEFINE_GUID(CLSID_AccelTable,0x000D02A0L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class AccelTable;
#endif

DEFINE_GUID(CLSID_AccelTables,0x000D02A4L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class AccelTables;
#endif

typedef IVHyperlink FAR* LPVISIOHYPERLINK;

typedef IVOLEObjects FAR* LPVISIOOBJECTS;

typedef IVOLEObject FAR* LPVISIOOBJECT;

typedef IVPaths FAR* LPVISIOPATHS;

typedef IVPath FAR* LPVISIOPATH;

typedef IVCurve FAR* LPVISIOCURVE;

typedef enum tagVisScrollbarStates {
    visScrollBarNeither = 0,
    visScrollBarHoriz = 1,
    visScrollBarVert = 4,
    visScrollBarBoth = 5
} VisScrollbarStates;

typedef enum tagVisDocModeArgs {
    visDocModeRun = 0,
    visDocModeDesign = 1
} VisDocModeArgs;

typedef enum tagVisTraceCodes {
    visTraceEvents = 1,
    visTraceAdvises = 2,
    visTraceAddonInvokes = 4,
    visTraceCallsToVBA = 8
} VisTraceFlags;

DEFINE_GUID(IID_IVHyperlink,0x000D071DL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVHyperlink */
#undef INTERFACE
#define INTERFACE IVHyperlink

DECLARE_INTERFACE_(IVHyperlink, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVHyperlink methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Shape)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Address)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Address)(THIS_ BSTR Address) PURE;
    STDMETHOD(get_SubAddress)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_SubAddress)(THIS_ BSTR SubAddress) PURE;
    STDMETHOD(get_NewWindow)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(put_NewWindow)(THIS_ short TrueOrFalse) PURE;
    STDMETHOD(get_ExtraInfo)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_ExtraInfo)(THIS_ BSTR ExtraRequestInfo) PURE;
    STDMETHOD(get_Frame)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Frame)(THIS_ BSTR FrameToTarget) PURE;
    STDMETHOD(AddToFavorites)(THIS_ VARIANT FavoritesTitle) PURE;
    STDMETHOD(Follow)(THIS) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(Copy)(THIS) PURE;
    STDMETHOD(CreateURL)(THIS_ short CanonicalForm, BSTR FAR* lpbstrRet) PURE;
};

DEFINE_GUID(IID_IVOLEObjects,0x000D071EL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVOLEObjects */
#undef INTERFACE
#define INTERFACE IVOLEObjects

DECLARE_INTERFACE_(IVOLEObjects, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVOLEObjects methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT NameOrIndex, IVOLEObject FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
};

DEFINE_GUID(IID_IVOLEObject,0x000D071FL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVOLEObject */
#undef INTERFACE
#define INTERFACE IVOLEObject

DECLARE_INTERFACE_(IVOLEObject, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVOLEObject methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Shape)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Stat)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_ClassID)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_ProgID)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_ForeignType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Object)(THIS_ IDispatch * FAR* lpdispRet) PURE;
};

DEFINE_GUID(IID_IVPaths,0x000D0720L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVPaths */
#undef INTERFACE
#define INTERFACE IVPaths

DECLARE_INTERFACE_(IVPaths, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVPaths methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ short Index, IVPath FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
};

DEFINE_GUID(IID_IVPath,0x000D0721L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVPath */
#undef INTERFACE
#define INTERFACE IVPath

DECLARE_INTERFACE_(IVPath, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVPath methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Item)(THIS_ short Index, IVCurve FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Count)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Closed)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Points)(THIS_ double Tolerance, SAFEARRAY FAR* FAR* xyArray) PURE;
};

DEFINE_GUID(IID_IVCurve,0x000D0722L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVCurve */
#undef INTERFACE
#define INTERFACE IVCurve

DECLARE_INTERFACE_(IVCurve, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVCurve methods */
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ObjectType)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Closed)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(Points)(THIS_ double Tolerance, SAFEARRAY FAR* FAR* xyArray) PURE;
    STDMETHOD(get_Start)(THIS_ double FAR* lpr8Ret) PURE;
    STDMETHOD(get_End)(THIS_ double FAR* lpr8Ret) PURE;
    STDMETHOD(Point)(THIS_ double t, double FAR* x, double FAR* y) PURE;
    STDMETHOD(PointAndDerivatives)(THIS_ double t, short n, double FAR* x, double FAR* y, double FAR* dxdt, double FAR* dydt, double FAR* ddxdt, double FAR* ddydt) PURE;
};

DEFINE_GUID(IID_IVExtender,0x000D0D0EL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVExtender */
#undef INTERFACE
#define INTERFACE IVExtender

DECLARE_INTERFACE_(IVExtender, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVExtender methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Object)(THIS_ IUnknown * FAR* ppunk) PURE;
    STDMETHOD(get_Parent)(THIS_ IUnknown * FAR* ppunk) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(Index)(THIS) PURE;
    STDMETHOD(get_Shape)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(Group)(THIS) PURE;
    STDMETHOD(BringForward)(THIS) PURE;
    STDMETHOD(BringToFront)(THIS) PURE;
    STDMETHOD(ConvertToGroup)(THIS) PURE;
    STDMETHOD(SendBackward)(THIS) PURE;
    STDMETHOD(SendToBack)(THIS) PURE;
    STDMETHOD(get_Document)(THIS_ IVDocument FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ShapeParent)(THIS_ IDispatch * FAR* lpdispRet) PURE;
    STDMETHOD(get_Application)(THIS_ IVApplication FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Master)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Cells)(THIS_ BSTR CellName, IVCell FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_CellsSRC)(THIS_ short Section, short Row, short Column, IVCell FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_Data1)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Data1)(THIS_ BSTR String) PURE;
    STDMETHOD(get_Data2)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Data2)(THIS_ BSTR String) PURE;
    STDMETHOD(get_Data3)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Data3)(THIS_ BSTR String) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR String) PURE;
    STDMETHOD(get_NameID)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(ShapeCopy)(THIS) PURE;
    STDMETHOD(ShapeCut)(THIS) PURE;
    STDMETHOD(ShapeDelete)(THIS) PURE;
    STDMETHOD(ShapeDuplicate)(THIS) PURE;
    STDMETHOD(get_RowCount)(THIS_ short Section, short FAR* lpi2Ret) PURE;
    STDMETHOD(AddSection)(THIS_ short Section, short FAR* lpi2Ret) PURE;
    STDMETHOD(DeleteSection)(THIS_ short Section) PURE;
    STDMETHOD(AddRow)(THIS_ short Section, short Row, short RowTag, short FAR* lpi2Ret) PURE;
    STDMETHOD(DeleteRow)(THIS_ short Section, short Row) PURE;
    STDMETHOD(get_RowsCellCount)(THIS_ short Section, short Row, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_RowType)(THIS_ short Section, short Row, short FAR* lpi2Ret) PURE;
    STDMETHOD(put_RowType)(THIS_ short Section, short Row, short RowTag) PURE;
    STDMETHOD(SetCenter)(THIS_ double xPos, double yPos) PURE;
    STDMETHOD(get_Connects)(THIS_ IVConnects FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ShapeIndex)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Style)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_Style)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_StyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_LineStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_LineStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_LineStyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(get_FillStyle)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(put_FillStyle)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(put_FillStyleKeepFmt)(THIS_ BSTR StyleName) PURE;
    STDMETHOD(Export)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_UniqueID)(THIS_ short fUniqueID, BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_ContainingPage)(THIS_ IVPage FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingMaster)(THIS_ IVMaster FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ContainingShape)(THIS_ IVShape FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_SectionExists)(THIS_ short Section, short fLocalExists, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_RowExists)(THIS_ short Section, short Row, short fLocalExists, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_CellExists)(THIS_ BSTR CellName, short fLocalExists, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_CellsSRCExists)(THIS_ short Section, short Row, short Column, short fLocalExists, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_LayerCount)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Layer)(THIS_ short Index, IVLayer FAR* FAR* lpdispRet) PURE;
    STDMETHOD(AddNamedRow)(THIS_ short Section, BSTR RowName, short RowTag, short FAR* lpi2Ret) PURE;
    STDMETHOD(AddRows)(THIS_ short Section, short Row, short RowTag, short RowCount, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_EventList)(THIS_ IVEventList FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_PersistsEvents)(THIS_ short FAR* lpboolRet) PURE;
    STDMETHOD(get_ClassID)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_ShapeObject)(THIS_ IDispatch * FAR* lpdispRet) PURE;
    STDMETHOD(OpenSheetWindow)(THIS_ IVWindow FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ShapeID)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(GetFormulas)(THIS_ SAFEARRAY FAR* FAR* SRCStream, SAFEARRAY FAR* FAR* formulaArray) PURE;
    STDMETHOD(GetResults)(THIS_ SAFEARRAY FAR* FAR* SRCStream, short Flags, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray) PURE;
    STDMETHOD(SetFormulas)(THIS_ SAFEARRAY FAR* FAR* SRCStream, SAFEARRAY FAR* FAR* formulaArray, short Flags, short FAR* lpi2Ret) PURE;
    STDMETHOD(SetResults)(THIS_ SAFEARRAY FAR* FAR* SRCStream, SAFEARRAY FAR* FAR* UnitsNamesOrCodes, SAFEARRAY FAR* FAR* resultArray, short Flags, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_FromConnects)(THIS_ IVConnects FAR* FAR* lpdispRet) PURE;
    STDMETHOD(BoundingBox)(THIS_ short Flags, double FAR* lpr8Left, double FAR* lpr8Bottom, double FAR* lpr8Right, double FAR* lpr8Top) PURE;
    STDMETHOD(HitTest)(THIS_ double xPos, double yPos, double Tolerance, short FAR* lpi2Ret) PURE;
    STDMETHOD(get_Hyperlink)(THIS_ IVHyperlink FAR* FAR* lpdispRet) PURE;
    STDMETHOD(get_ProgID)(THIS_ BSTR FAR* lpbstrRet) PURE;
    STDMETHOD(get_ObjectIsInherited)(THIS_ short FAR* lpboolRet) PURE;
};

DEFINE_GUID(DIID_IVDispExtender,0x000D0D0FL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: IVDispExtender */
#undef INTERFACE
#define INTERFACE IVDispExtender

DECLARE_INTERFACE_(IVDispExtender, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

/* Capable of dispatching all the methods of interface IVExtender */
};

DEFINE_GUID(IID_IVAmbients,0x000D0D10L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVAmbients */
#undef INTERFACE
#define INTERFACE IVAmbients

DECLARE_INTERFACE_(IVAmbients, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVAmbients methods */
    STDMETHOD(get_BackColor)(THIS_ long FAR* lpColorRet) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstr) PURE;
    STDMETHOD(get_Font)(THIS_ IDispatch * FAR* ppDisp) PURE;
    STDMETHOD(get_ForeColor)(THIS_ long FAR* lpColorRet) PURE;
    STDMETHOD(get_LocaleID)(THIS_ long FAR* lpi4Ret) PURE;
    STDMETHOD(get_MessageReflect)(THIS_ VARIANT_BOOL FAR* lpi2Ret) PURE;
    STDMETHOD(get_ScaleUnits)(THIS_ BSTR FAR* bstr) PURE;
    STDMETHOD(get_TextAlign)(THIS_ short FAR* lpi2Ret) PURE;
    STDMETHOD(get_UserMode)(THIS_ VARIANT_BOOL FAR* lpi2Ret) PURE;
    STDMETHOD(get_UIDead)(THIS_ VARIANT_BOOL FAR* lpi2Ret) PURE;
    STDMETHOD(get_ShowGrabHandles)(THIS_ VARIANT_BOOL FAR* lpi2Ret) PURE;
    STDMETHOD(get_ShowHatching)(THIS_ VARIANT_BOOL FAR* lpi2Ret) PURE;
    STDMETHOD(get_DisplayAsDefault)(THIS_ VARIANT_BOOL FAR* lpi2Ret) PURE;
    STDMETHOD(get_SupportsMnemonics)(THIS_ VARIANT_BOOL FAR* lpi2Ret) PURE;
    STDMETHOD(get_AutoClip)(THIS_ VARIANT_BOOL FAR* lpi2Ret) PURE;
    STDMETHOD(get_Appearance)(THIS_ long FAR* lpi2Ret) PURE;
};

DEFINE_GUID(CLSID_Control,0x000D0D00L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Control;
#endif

DEFINE_GUID(CLSID_Extender,0x000D0D06L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Extender;
#endif

DEFINE_GUID(CLSID_Hyperlink,0x000D0A1BL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Hyperlink;
#endif

DEFINE_GUID(CLSID_OLEObjects,0x000D0A1CL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class OLEObjects;
#endif

DEFINE_GUID(CLSID_OLEObject,0x000D0A1DL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class OLEObject;
#endif

DEFINE_GUID(CLSID_Paths,0x000D0A1EL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Paths;
#endif

DEFINE_GUID(CLSID_Path,0x000D0A1FL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Path;
#endif

DEFINE_GUID(CLSID_Curve,0x000D0A20L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Curve;
#endif

#endif
